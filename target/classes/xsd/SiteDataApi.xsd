<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://liveperson.com/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xml="http://www.w3.org/XML/1998/namespace" targetNamespace="http://liveperson.com/v1.0" elementFormDefault="qualified" attributeFormDefault="unqualified">
    <xs:import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
    <!--
    Site Data API XML Schema (a.k.a Deployment API)

    Site Data API is a REST style XML web service for accessing and manipulating site data, such as Rules, Segments, Operators & etc.

    Limitations:
    1. REST limitation - PRUN only supports GET and POST. See the examples below to learn what substitutes HTTP PUT & HTTP DELETE.
    2. All site data read/write requests should be enclosed in a transaction.
    3. Each StartTransaction requires login. The (login) session ends when the transaction is closed.
    4. When closing the transaction ("EndTransaction"), the user can decide to commit or rollback the changes.


    Usage examples (all actions except "Login & start transaction" should be authenticated using a cookie recieved when requesting "Login & start transaction"):

    Action                              HTTP METHOD URL                                                         Request message     Response Message
    ***************************         *********** ***************************************************         ****************    ****************

    Login & start transaction           POST        https://<host>/hc/s-<siteid>/web/sdapi/transactions         StartTransaction    IdRef (with a URL that should be used for EndTransaction)
    Create a new rule                   POST        https://<host>/hc/s-<siteid>/web/sdapi/rules                Rule                idRef
    Get all supported resources         GET         https://<host>/hc/s-<siteid>/web/sdapi                      <empty body>        Resources
    Get all rules                       GET         https://<host>/hc/s-<siteid>/web/sdapi/rules                <empty body>        Rules
    Get rule with id = <id>             GET         https://<host>/hc/s-<siteid>/web/sdapi/rules/<id>           <empty body>        Rule
    Update rule with id = <id>          POST        https://<host>/hc/s-<siteid>/web/sdapi/rules/<id>           UpdateRule          Success
    Delete rule with id = <id>          POST        https://<host>/hc/s-<siteid>/web/sdapi/rules/<id>?delete=true <empty body>      Success
    Get all revisions                   GET         https://<host>/hc/s-<siteid>/web/sdapi/revisions            <empty body>        Revisions
    End transaction & logout            POST        https://<host>/hc/s-<siteid>/web/sdapi/transactions/<user>  EndTransaction      Success
    -->
    <!-- all message types -->
    <xs:element name="message">
        <xs:complexType>
            <xs:choice>
                <xs:element name="StartTransaction" type="startTransaction"/>
                <xs:element name="EndTransaction" type="endTransaction"/>
                <xs:element name="Resources" type="resources"/>
                <xs:element name="Rules" type="rules"/>
                <xs:element name="Rule" type="rule"/>
                <xs:element name="UpdateRule" type="updateRule"/>
                <xs:element name="Submit" type="submit"/>
                <xs:element name="RuleType" type="context"/>
                <xs:element name="RuleTypes" type="contexts"/>
                <xs:element name="UpdateRuleType" type="updateContext"/>
                <xs:element name="Initiative" type="initiative"/>
                <xs:element name="Initiatives" type="initiatives"/>
                <xs:element name="UpdateInitiative" type="updateInitiative"/>
                <xs:element name="Campaign" type="campaign"/>
                <xs:element name="Campaigns" type="campaigns"/>
                <xs:element name="UpdateCampaign" type="updateCampaign"/>
                <xs:element name="FollowupCampaign" type="followupCampaign"/>
                <xs:element name="FollowupCampaigns" type="followupCampaigns"/>
                <xs:element name="UpdateFollowupCampaign" type="updateFollowupCampaign"/>
                <xs:element name="Segment" type="segment"/>
                <xs:element name="Segments" type="segments"/>
                <xs:element name="UpdateSegment" type="updateSegment"/>
                <xs:element name="RulesSet" type="rulesSet"/>
                <xs:element name="UpdateRulePosition" type="updateRulePosition"/>
                <xs:element name="IdRef" type="idRef"/>
                <xs:element name="Error" type="error"/>
                <xs:element name="Success" type="xs:boolean" default="false"/>
                <xs:element name="DynamicButton" type="dynamicButton"/>
                <xs:element name="DynamicButtons" type="dynamicButtons"/>
                <xs:element name="UpdateDynamicButton" type="updateDynamicButton"/>
                <xs:element name="InternalSkills" type="internalSkills"/>
                <xs:element name="InternalSkill" type="internalSkill"/>
                <xs:element name="UpdateInternalSkill" type="updateInternalSkill"/>
                <xs:element name="Operators" type="operators"/>
                <xs:element name="UpdateOperator" type="updateOperator"/>
                <xs:element name="Operator" type="operator"/>
                <xs:element name="PredictiveDialers" type="predictiveDialers"/>
                <xs:element name="PredictiveDialer" type="predictiveDialer"/>
                <xs:element name="UpdatePredictiveDialer" type="updatePredictiveDialer"/>
                <xs:element name="ReportCounters" type="reportCounters"/>
                <xs:element name="MarketerProperties" type="marketerProperties"/>
                <xs:element name="OperatorGroups" type="operatorGroups"/>
                <xs:element name="OperatorGroup" type="operatorGroup"/>
                <xs:element name="UpdateOperatorGroup" type="updateOperatorGroup"/>
                <xs:element name="PermissionGroups" type="permissionGroups"/>
                <xs:element name="PermissionGroup" type="permissionGroup"/>
                <xs:element name="UpdatePermissionGroup" type="updatePermissionGroup"/>
                <xs:element name="VisitorProfiles" type="visitorProfiles"/>
                <xs:element name="VisitorProfile" type="visitorProfile"/>
                <xs:element name="UpdateVisitorProfile" type="updateVisitorProfile"/>
                <xs:element name="CannedResponses" type="cannedResponses"/>
                <xs:element name="CannedResponse" type="cannedResponse"/>
                <xs:element name="UpdateCannedResponse" type="updateCannedResponse"/>
                <xs:element name="SystemMessages" type="systemMessages"/>
                <xs:element name="SystemMessage" type="systemMessage"/>
                <xs:element name="UpdateSystemMessage" type="systemMessage"/>
                <xs:element name="AdminProfiles" type="adminProfiles"/>
                <xs:element name="AdminProfile" type="adminProfile"/>
                <xs:element name="UpdateAdminProfile" type="updateAdminProfile"/>
                <xs:element name="AcdAttributesSets" type="acdAttributesSets"/>
                <xs:element name="ChatLibraryResources" type="chatLibraryResources"/>
                <xs:element name="ChatLibraryResource" type="chatLibraryResource"/>
                <xs:element name="UpdateChatLibraryResource" type="updateChatLibraryResource"/>
                <xs:element name="Surveys" type="surveys"/>
                <xs:element name="Survey" type="survey"/>
                <xs:element name="UpdateSurvey" type="updateSurvey"/>
                <xs:element name="ChatWindows" type="chatWindows"/>
                <xs:element name="ObjectRevisions" type="objectRevisions"/>
                <xs:element name="WindowsProperties" type="windowsProperties"/>
                <xs:element name="WindowProperties" type="windowProperties"/>
                <xs:element name="UpdateWindowProperties" type="updateWindowProperties"/>
                <xs:element name="Invitations" type="invitations"/>
                <xs:element name="Invitation" type="invitation"/>
                <xs:element name="UpdateInvitation" type="updateInvitation"/>
            </xs:choice>
            <xs:attribute name="version" type="xs:string" use="optional"/>
        </xs:complexType>
    </xs:element>

    <!--list of permission groups-->
    <xs:complexType name="permissionGroups">
        <xs:sequence>
            <xs:element name="permissionGroupRef" type="objRef" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!--single permission group (holding permissions)-->
    <xs:complexType name="permissionGroup">
        <xs:sequence>
                <xs:element name="name" type="lpString" />
                <xs:element name="description" type="lpString" />
                <xs:element name="adminProfile" type="idRef" minOccurs="0" />
                <xs:element name="permissions" type="permissions" />
        </xs:sequence>
    </xs:complexType>

    <!--update permissiong group object-->
    <xs:complexType name="updatePermissionGroup">
        <xs:sequence>
            <!--name is not updateable-->
            <xs:element name="description" type="lpString" minOccurs="0"/>
            <xs:element name="adminProfile" type="idRef" minOccurs="0"/>
            <xs:element name="permissions" type="permissions" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>All permissions should be provided in the lis.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- Permission list-->
    <xs:complexType name="permissions">
        <xs:sequence>
            <xs:element name="permission" type="permission" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="permission" >
        <xs:sequence>
            <!--type specific/general? in specific you can mention the profiles, in general you cannot.-->
            <xs:element name="id" type="xs:long" minOccurs="1"/>
            <!--name is for retreive and not for update-->
            <xs:element name="name" type="lpString" minOccurs="0"/>
            <!--either enabled, or specified per profile -->
            <xs:choice minOccurs="1">
                <xs:element name="enabled" type="xs:boolean" />
                <xs:element name="profiles" type="permissionProfiles" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="permissionProfiles">
        <xs:sequence>
            <xs:element name="profile" type="permissionProfile" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="permissionProfile">
        <xs:sequence>
            <xs:element name="profileId" type="idRef"/>
            <xs:element name="enabled" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <!-- Permissions -->

    <!--admin profiles -->
    <xs:complexType name="adminProfiles">
        <xs:sequence>
            <xs:element name="adminProfileRef" type="objRef" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="adminProfile">
        <xs:sequence>
            <xs:element name="name" type="lpString" />
            <xs:element name="description" type="lpString" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateAdminProfile">
        <xs:sequence>
            <xs:element name="name" type="lpString" minOccurs="0"/>
            <xs:element name="description" type="lpString" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <!-- admin profiles -->

    <xs:complexType name="objRef">
        <xs:sequence>
            <xs:element name="id" type="xs:string"/>
            <xs:element name="name" type="lpString"/>
        </xs:sequence>
        <xs:attribute ref="xlink:href"/>
    </xs:complexType>
    <!-- Resource list message -->
    <xs:complexType name="resources">
        <xs:sequence>
            <xs:element name="resource" type="resource" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="resource">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute ref="xlink:href"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!-- start transaction message -->
    <xs:complexType name="startTransaction">
        <xs:sequence>
            <xs:element name="user" type="lpString"/>
            <xs:element name="pass" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <!-- login message -->
    <xs:complexType name="endTransaction">
        <xs:sequence>
            <xs:element name="commit" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <!-- allRulesResponse message type -->
    <xs:complexType name="rules">
        <xs:sequence>
            <xs:element name="ruleRef" type="ruleRef" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ruleRef">
        <xs:complexContent>
            <xs:extension base="objRef">
                <xs:sequence>
                    <xs:element name="ruleSet" type="idRef"/>
                    <xs:element name="ruleType" type="idRef"/>
                    <xs:element name="segment" type="idRef" default="-999"/>
                    <xs:choice>
                        <xs:element name="initiative" type="idRef" default="-1"/>
                        <xs:element name="campaign" type="idRef" default="-1"/>
                        <xs:element name="followupCampaign" type="idRef" default="-1"/>
                    </xs:choice>
                    <xs:element name="enabled" type="xs:boolean"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- updateRule message type -->
    <xs:complexType name="updateRule">
        <xs:complexContent>
            <xs:extension base="ruleBase">
                <xs:sequence>
                    <xs:element name="name" type="lpString" default="" minOccurs="0"/>
                    <xs:element name="enabled" type="xs:boolean" default="true" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- submit message type -->
    <xs:complexType name="submit">
        <xs:sequence>
            <xs:element name="commit" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="error">
        <xs:sequence>
            <xs:element name="errorMsg" type="errorMsg" nillable="true"/>
            <xs:element name="detailedMsg" type="lpString" nillable="true"/>
            <xs:element name="resource" type="xs:string" nillable="true"/>
            <xs:element name="id" type="xs:string" nillable="true"/>
            <xs:element name="requestType" type="xs:string" nillable="true"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="errorMsg">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Request is not supported"/>
            <xs:enumeration value="Wrong id format"/>
            <xs:enumeration value="List of ids is partial."/>
            <xs:enumeration value="An element with the same name already exists."/>
            <xs:enumeration value="Element id does not exist."/>
            <xs:enumeration value="End Date is before Start Date for element."/>
            <xs:enumeration value="There are rules belonging to this element."/>
            <xs:enumeration value="An element with the same parameter values already exists."/>
            <xs:enumeration value="Request XML is missing"/>
            <xs:enumeration value="Request XML body is missing"/>
            <xs:enumeration value="Request failed"/>
            <xs:enumeration value="Wrong parameters"/>
            <xs:enumeration value="Not allowed in context"/>
            <xs:enumeration value="Internal error"/>
            <xs:enumeration value="Resource not found"/>
            <xs:enumeration value="HTTP method not supported"/>
            <xs:enumeration value="Request not authenticated"/>
            <xs:enumeration value="No permission"/>
            <xs:enumeration value="Not using SSL"/>
            <xs:enumeration value="Concurrent revision"/>
            <xs:enumeration value="Not provisioned"/>
            <xs:enumeration value="Request XML validation failed"/>
            <xs:enumeration value="Login error"/>
            <xs:enumeration value="This resource can not be deleted"/>
            <xs:enumeration value="Not authorized"/>
            <xs:enumeration value="Account is disabled"/>
            <xs:enumeration value="Account has expired"/>
            <xs:enumeration value="Element is not supported"/>
            <xs:enumeration value="Element is missing"/>
            <xs:enumeration value="Sequence is out of bounds"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="context">
        <xs:sequence>
            <xs:element name="type" type="xs:int"/>
            <xs:element name="name" type="lpString" minOccurs="0"/>
            <xs:element name="custom" type="xs:boolean" default="true" minOccurs="0"/>
            <xs:element name="description" type="lpString" default="" minOccurs="0">
                <xs:annotation>
                    <xs:documentation> max length: 500 </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="parameters" type="parameters" minOccurs="0"/>
            <xs:element name="enabled" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="contextRef">
        <xs:complexContent>
            <xs:extension base="objRef">
                <xs:sequence>
                    <xs:element name="type" type="xs:int"/>
                    <xs:element name="custom" type="xs:boolean" default="true"/>
                    <xs:element name="parameters" type="parameters" minOccurs="0"/>
                    <xs:element name="enabled" type="xs:boolean"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="updateContext">
        <xs:sequence>
            <xs:element name="description" type="lpString" minOccurs="0"/>
            <xs:element name="parameters" type="parameters" minOccurs="0"/>
            <xs:element name="enabled" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="contexts">
        <xs:sequence>
            <xs:element name="ruleTypeRef" type="contextRef" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!--Initiatives -->
    <xs:complexType name="initiative">
        <xs:sequence>
            <xs:element name="name" type="lpString">
                <xs:annotation>
                    <xs:documentation> max length: 200 </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="description" type="lpString" default="" minOccurs="0">
                <xs:annotation>
                    <xs:documentation> max length: 500 </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="enabled" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="initiatives">
        <xs:sequence>
            <xs:element name="elementRef" type="initiativeRef" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateInitiative">
        <xs:sequence>
            <xs:element name="name" type="lpString" minOccurs="0"/>
            <xs:element name="description" type="lpString" minOccurs="0"/>
            <xs:element name="enabled" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="initiativeRef">
        <xs:complexContent>
            <xs:extension base="objRef">
                <xs:sequence>
                    <xs:element name="enabled" type="xs:boolean"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--Campaigns -->
    <xs:complexType name="campaign">
        <xs:complexContent>
            <xs:extension base="initiative">
                <xs:sequence>
                    <xs:element name="startDate" type="xs:dateTime"/>
                    <xs:element name="endDate" type="xs:dateTime"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="updateCampaign">
        <xs:complexContent>
            <xs:extension base="updateInitiative">
                <xs:sequence>
                    <xs:element name="startDate" type="xs:dateTime" minOccurs="0"/>
                    <xs:element name="endDate" type="xs:dateTime" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="campaignRef">
        <xs:complexContent>
            <xs:extension base="initiativeRef">
                <xs:sequence>
                    <xs:element name="startDate" type="xs:dateTime"/>
                    <xs:element name="endDate" type="xs:dateTime"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="campaigns">
        <xs:complexContent>
            <xs:extension base="initiatives"/>
        </xs:complexContent>
    </xs:complexType>
    <!--followupCampaign -->
    <xs:complexType name="followupCampaign">
        <xs:complexContent>
            <xs:extension base="campaign"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="updateFollowupCampaign">
        <xs:complexContent>
            <xs:extension base="updateCampaign"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="followupCampaignRef">
        <xs:complexContent>
            <xs:extension base="campaignRef"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="followupCampaigns">
        <xs:complexContent>
            <xs:extension base="campaigns"/>
        </xs:complexContent>
    </xs:complexType>
    <!--Segments -->
    <xs:complexType name="segment">
        <xs:sequence>
            <xs:element name="name" type="lpString">
                <xs:annotation>
                    <xs:documentation> max length: 200 </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="description" type="lpString" default="" minOccurs="0">
                <xs:annotation>
                    <xs:documentation> max length: 500 </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateSegment">
        <xs:sequence>
            <xs:element name="name" type="lpString" minOccurs="0"/>
            <xs:element name="description" type="lpString" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="segmentRef">
        <xs:complexContent>
            <xs:extension base="objRef"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="segments">
        <xs:sequence>
            <xs:element name="segmentRef" type="segmentRef" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!-- rulesSet message type -->
    <xs:complexType name="rulePosition">
        <xs:sequence>
            <xs:element name="ruleId" type="idRef"/>
            <xs:element name="ruleName" type="lpString"/>
            <xs:element name="ruleIndex" type="xs:int"/>
            <xs:element name="ruleInitiative" type="xs:int" default="-1" minOccurs="0"/>
            <xs:element name="ruleEnabled" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="rulesSet">
        <xs:sequence>
            <xs:element name="rulePosition" type="rulePosition" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateRulePosition">
        <xs:sequence>
            <xs:element name="rulePosition" type="idRef" minOccurs="2" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!-- Dynamic Button -->
    <xs:complexType name="dynamicButtons">
        <xs:sequence>
            <xs:element name="dynamicButtonRef" type="dynamicButtonRef" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="dynamicButton">
        <xs:annotation>
            <xs:documentation>
                This type is extended by all dynamic button types:
                Chat, Single Step Voice, Dual Step Voice and Multi Channel.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="type" type="dynamicButtonType">
                <xs:annotation>
                    <xs:documentation>
                        Dynamic button types:
                        Chat, Single Step Voice, Dual Step Voice and Multi Channel.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!-- Update Dynamic Button -->
    <xs:complexType name="updateDynamicButton">
        <xs:annotation>
            <xs:documentation>
                This type is extended by all dynamic button types that should allow updates.
            </xs:documentation>
        </xs:annotation>
    </xs:complexType>
    <xs:complexType name="updateDynamicButtonBase">
        <xs:annotation>
            <xs:documentation>
                the common members for all update dynamic button types.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="updateDynamicButton">
                <xs:sequence>
                    <xs:element name="name" type="lpString" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                the updated name of the dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="refresh" type="refresh" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                the updated refresh rate of the dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="onTopOfObjects" type="onTopOfObjects" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                the updated 'On Top Of Objects' selection  of the dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="position" type="dynamicButtonPosition" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                the updated position selection of the dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="buttonTitle" type="lpString" nillable="true" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                the updated title of the dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- Update Chat Dynamic Button -->
    <xs:complexType name="updateChatDynamicButton">
        <xs:annotation>
            <xs:documentation>
                this schema should be used in case of updating a Chat Dynamic Button.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="updateDynamicButtonBase">
                <xs:sequence>
                    <xs:element name="imageLocation" type="imageLocation" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                the updated image location selection of the dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- Update Voice Dual Step Dynamic Button -->
    <xs:complexType name="updateVoiceDualStepDynamicButton">
        <xs:annotation>
            <xs:documentation>
                this schema should be used in case of updating a Voice Dual Step Dynamic Button.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="updateDynamicButtonBase">
                <xs:sequence>
                    <xs:element name="imageLocation" type="imageLocation" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                the updated image location selection of the dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- Update Voice Single Step Dynamic Button -->
    <xs:complexType name="updateVoiceSingleStepDynamicButton">
        <xs:annotation>
            <xs:documentation>
                this schema should be used in case of updating a Voice Single Step Dynamic Button.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="updateDynamicButtonBase">
                <xs:sequence>
                    <xs:element name="imageLocation" type="singleStepImageLocation" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Updated image location selection of the dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="callButton" type="position" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Updated Call Button position of the dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="phoneNumber" type="phoneNumber" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Updated Phone Number properties of the dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="countries" type="countries" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Updated chosen countries of the dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="showCountrySelection" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Updated Show country selection of the dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- Update Multi Channel Dynamic Button -->
    <xs:complexType name="updateMultiChannelDynamicButton">
        <xs:annotation>
            <xs:documentation>
                this schema should be used in case of updating a Multi Channel Dynamic Button.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="updateDynamicButton">
                <xs:sequence>
                    <xs:element name="commonProperties" type="updateCommonProperties" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Updated Common Properties of the multi channel dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="chatProperties" type="updateChatProperties" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Updated Chat Properties of the multi channel dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:choice>
                        <xs:element name="voiceDualStepProperties" type="updateVoiceDualStepProperties" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>
                                    Updated selected Voice Dual Step Properties of the multi channel dynamic button.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="voiceSingleStepProperties" type="updateVoiceSingleStepProperties" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>
                                    Updated selected Voice Single Step Properties of the multi channel dynamic button.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="dynamicButtonBase">
        <xs:annotation>
            <xs:documentation>
                The common members for all new dynamic button types.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dynamicButton">
                <xs:sequence>
                    <xs:element name="name" type="lpString">
                        <xs:annotation>
                            <xs:documentation>
                                Name of the new dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="refresh" type="refresh" default="-1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Refresh rate of the new dynamic button. default: None. restricted to: 30/60/90.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="onTopOfObjects" type="onTopOfObjects" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                'On Top Of Objects' selection of the new dynamic button. default: None.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="position" type="dynamicButtonPosition">
                        <xs:annotation>
                            <xs:documentation>
                                Position selection of the new dynamic button. default: Relative.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="buttonTitle" type="lpString" default="Click to Chat With an Online Representative" nillable="true" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Title of the new dynamic button. default: "Click to Chat With an Online Representative".
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="dynamicButtonRef">
        <xs:annotation>
            <xs:documentation>
                The dynamic button reference.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="objRef">
                <xs:sequence>
                    <xs:element name="type" type="dynamicButtonType">
                        <xs:annotation>
                            <xs:documentation>
                                Dynamic button types:
                                Chat, Single Step Voice, Dual Step Voice and Multi Channel.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="chatDynamicButton">
        <xs:annotation>
            <xs:documentation>
                this schema should be used in case of creating new Chat Dynamic Button.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dynamicButtonBase">
                <xs:sequence>
                    <xs:element name="imageLocation" type="imageLocation">
                        <xs:annotation>
                            <xs:documentation>
                                Image location selection of the new dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="voiceDualStepDynamicButton">
        <xs:annotation>
            <xs:documentation>
                This schema should be used in case of creating new Voice Dual Step Dynamic Button.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dynamicButtonBase">
                <xs:sequence>
                    <xs:element name="imageLocation" type="imageLocation">
                        <xs:annotation>
                            <xs:documentation>
                                Image location selection of the new dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="voiceSingleStepDynamicButton">
        <xs:annotation>
            <xs:documentation>
                This schema should be used in case of creating new Voice Single Step Dynamic Button.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dynamicButtonBase">
                <xs:sequence>
                    <xs:element name="imageLocation" type="singleStepImageLocation">
                        <xs:annotation>
                            <xs:documentation>
                                Image location selection of the new dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="callButton" type="position" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Call Button position of the new dynamic button. defaults: Top - 100 pixels. Left - 150 pixels
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="phoneNumber" type="phoneNumber" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Phone Number properties of the new dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="countries" type="countries" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Chosen countries of the new dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="showCountrySelection" type="xs:boolean" default="false" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                Show country selection of the new dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="multiChannelDynamicButton">
        <xs:annotation>
            <xs:documentation>
                This schema should be used in case of creating new Multi Channel Dynamic Button.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="dynamicButton">
                <xs:sequence>
                    <xs:element name="commonProperties" type="commonProperties">
                        <xs:annotation>
                            <xs:documentation>
                                The Common Properties of the multi channel dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="chatProperties" type="chatProperties">
                        <xs:annotation>
                            <xs:documentation>
                                The Chat Properties of the multi channel dynamic button.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:choice>
                        <xs:element name="voiceDualStepProperties" type="voiceDualStepProperties">
                            <xs:annotation>
                                <xs:documentation>
                                    The Voice Dual Step Properties of the multi channel dynamic button.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="voiceSingleStepProperties" type="voiceSingleStepProperties">
                            <xs:annotation>
                                <xs:documentation>
                                    The Voice Single Step Properties of the multi channel dynamic button.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="buttonPositionWithinContainer">
        <xs:choice>
            <xs:element name="absolutePositioning" type="absolutePositioning">
                <xs:annotation>
                    <xs:documentation>
                        The position in pixels of the chat and voice buttons within the container.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="relativePositioning" type="relativePositioning">
                <xs:annotation>
                    <xs:documentation>
                        The position of the chat and voice buttons according to predefined options.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="absolutePositioning">
        <xs:sequence>
            <xs:element name="backgroundImageLocation" type="lpString"/>
            <xs:element name="chatPosition" type="multichannelPosition" minOccurs="0"/>
            <xs:element name="voicePosition" type="multichannelPosition" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="multichannelPixels">
        <xs:restriction base="xs:integer">
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="99999"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="multichannelPosition">
        <xs:sequence>
            <xs:element name="top" type="multichannelPixels" minOccurs="0"/>
            <xs:element name="left" type="multichannelPixels" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="relativePositioning">
        <xs:choice>
            <xs:element name="CHATontopVOICE" type="xs:boolean"/>
            <xs:element name="VOICEontopCHAT" type="xs:boolean"/>
            <xs:element name="CHATnextVOICE" type="xs:boolean"/>
            <xs:element name="VOICEnextCHAT" type="xs:boolean"/>
        </xs:choice>
    </xs:complexType>
    <xs:simpleType name="refresh">
        <xs:restriction base="xs:int">
            <xs:enumeration value="-1"/>
            <xs:enumeration value="30"/>
            <xs:enumeration value="60"/>
            <xs:enumeration value="90"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="dynamicButtonType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Chat"/>
            <xs:enumeration value="Single Step Voice"/>
            <xs:enumeration value="Dual Step Voice"/>
            <xs:enumeration value="Multi Channel"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="imageLocation">
        <xs:choice>
            <xs:element name="imagePath" type="lpString" minOccurs="0"/>
            <xs:element name="customImages" type="customImageLocation" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Allows individual image paths.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="HTML" type="customImageLocation" minOccurs="0"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="customImageLocationBase">
        <xs:sequence>
            <xs:element name="onlineState" type="lpString" default="" minOccurs="0"/>
            <xs:element name="offlineState" type="lpString" default="" minOccurs="0"/>
            <xs:element name="busyState" type="lpString" default="" minOccurs="0"/>
            <xs:element name="alternateState" type="lpString" default="" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="customImageLocation">
        <xs:complexContent>
            <xs:extension base="customImageLocationBase">
                <xs:sequence>
                    <xs:element name="defaultState" type="lpString"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="updateCustomImageLocation">
        <xs:complexContent>
            <xs:extension base="customImageLocationBase">
                <xs:sequence>
                    <xs:element name="defaultState" type="lpString" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="singleStepCustomImageLocation">
        <xs:sequence>
            <xs:element name="button" type="customImageLocationBase" minOccurs="0"/>
            <xs:element name="background" type="customImageLocationBase" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="singleStepImageLocation">
        <xs:annotation>
            <xs:documentation>
                Image location selection of the Voice Single step dynamic button.
            </xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:element name="imagePath" type="lpString" minOccurs="0"/>
            <xs:element name="customImages" type="singleStepCustomImageLocation" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Allows individual image paths.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <!-- multi channel button - commonProperties-->
    <xs:complexType name="commonProperties">
        <xs:sequence>
            <xs:element name="name" type="lpString"/>
            <xs:element name="refresh" type="refresh" minOccurs="0"/>
            <xs:element name="buttonPositionWithinContainer" type="buttonPositionWithinContainer"/>
            <xs:element name="onTopOfObjects" type="onTopOfObjects" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateCommonProperties">
        <xs:sequence>
            <xs:element name="name" type="lpString" minOccurs="0"/>
            <xs:element name="refresh" type="refresh" minOccurs="0"/>
            <xs:element name="buttonPositionWithinContainer" type="buttonPositionWithinContainer" minOccurs="0"/>
            <xs:element name="onTopOfObjects" type="onTopOfObjects" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="chatProperties">
        <xs:annotation>
            <xs:documentation>
                The Chat Properties of the multi channel dynamic button.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="name" type="lpString"/>
            <xs:choice>
                <xs:element name="imagePath" type="lpString"/>
                <xs:element name="customImages" type="customImageLocation">
                    <xs:annotation>
                        <xs:documentation>
                            allows individual image paths.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:choice>
            <xs:element name="mouseoverText" type="lpString" default="Click to Chat With an Online Representative" nillable="true" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Title of the new dynamic button. default: "Click to Chat With an Online Representative".
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateChatProperties">
        <xs:annotation>
            <xs:documentation>
                The updated Chat Properties of the multi channel dynamic button.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="name" type="lpString" minOccurs="0"/>
            <xs:choice>
                <xs:element name="imagePath" type="lpString" minOccurs="0"/>
                <xs:element name="customImages" type="customImageLocation" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>
                            allows update individual image paths.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:choice>
            <xs:element name="mouseoverText" type="lpString" nillable="true" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Updated Title of the new dynamic button.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="voiceDualStepProperties">
        <xs:annotation>
            <xs:documentation>
                The Voice Dual Step Properties of the multi channel dynamic button.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="chatProperties"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="updateVoiceDualStepProperties">
        <xs:annotation>
            <xs:documentation>
                The updated Voice Dual Step Properties of the multi channel dynamic button.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="updateChatProperties"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="voiceSingleStepProperties">
        <xs:annotation>
            <xs:documentation>
                The Voice Single Step Properties of the multi channel dynamic button.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="voiceName" type="lpString">
                <xs:annotation>
                    <xs:documentation>
                        The name of the Voice Single Step Dynamic Button.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="imageLocation" type="singleStepImageLocation">
                <xs:annotation>
                    <xs:documentation>
                        Image location selection of the Voice Single Step Dynamic Button.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="mouseoverText" type="lpString" default="Click to Call With an Online Representative" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Title of the Voice Single Step Dynamic Button. default: "Click to Call With an Online Representative".
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="callButton" type="position">
                <xs:annotation>
                    <xs:documentation>
                        Call Button position of the Voice Single Step Dynamic Button.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="phoneNumber" type="phoneNumber">
                <xs:annotation>
                    <xs:documentation>
                        Phone Number properties of the Voice Single Step Dynamic Button.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="countries" type="countries" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Chosen countries of the Voice Single Step Dynamic Button.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="showCountrySelection" type="xs:boolean" default="false" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Updated Show country selection of the Voice Single Step Dynamic Button. default: false.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateVoiceSingleStepProperties">
        <xs:annotation>
            <xs:documentation>
                The updated Voice Single Step Properties of the multi channel dynamic button.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="voiceName" type="lpString" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Updated Name of the Voice Single Step Dynamic Button.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="imageLocation" type="singleStepImageLocation" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Updated Image location selection of the Voice Single Step Dynamic Button.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="mouseoverText" type="lpString" nillable="true" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Updated Title of the new dynamic button.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="callButton" type="position" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Updated Call Button position of the dynamic button.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="phoneNumber" type="phoneNumber" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Updated Phone Number properties of the dynamic button.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="countries" type="countries" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Updated chosen countries of the dynamic button.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="showCountrySelection" type="xs:boolean" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Updated Show country selection of the dynamic button.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="dynamicButtonPosition">
        <xs:choice>
            <xs:element name="Absolute" type="buttonPosition">
                <xs:annotation>
                    <xs:documentation>
                        The button positioned using absolute coordinates.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Relative" type="buttonPosition">
                <xs:annotation>
                    <xs:documentation>
                        The button placed relative to the page width and height.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="onTopOfObjects">
        <xs:sequence>
            <xs:choice>
                <xs:element name="None" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>
                            Depending on your webpage design, your dynamic button might be obscured by objects such as Flash, drop-down boxes etc.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="HideObjects" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>
                            The button hides objects in its path which it can not be on top of.
                            Detects which objects would block your dynamic button and hides them.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="IEOnTop" type="IEOnTop">
                    <xs:annotation>
                        <xs:documentation>
                            For visitors browsing in Internet Explorer only. Ensures that your dynamic button remains on top of all other page objects.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="IEOnTop">
        <xs:sequence>
            <xs:element name="ieontopcolor" type="xs:string" nillable="true">
                <xs:annotation>
                    <xs:documentation>
                        Color of the mask used to display the invitation on top. Must start with '#'
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="buttonPosition">
        <xs:annotation>
            <xs:documentation>
                The button placed relative to the page width and height.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="width" type="xs:int" default="0" minOccurs="0"/>
            <xs:element name="height" type="xs:int" default="0" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="position">
        <xs:sequence>
            <xs:element name="top" type="pixels" minOccurs="0"/>
            <xs:element name="left" type="pixels" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="pixels">
        <xs:restriction base="xs:integer">
            <xs:minInclusive value="1"/>
            <xs:maxInclusive value="9999"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="phoneNumber">
        <xs:sequence>
            <xs:element name="phoneNumberInput" type="phoneNumberInput" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Phone Number Input selection. default: US Format.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="position" type="position" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Phone Number position. defaults: Top - 100 pixels. Left - 7 pixels.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="minPhoneNumberLength" type="xs:int" default="10" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Min Phone Number Length. default: 10.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="prePopulatePhoneNumber" type="xs:boolean" default="false" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Phone Number Input selection. default: false.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="phoneNumberInput">
        <xs:annotation>
            <xs:documentation>
                The customer will be able to choose from three phone number input conventions.
            </xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:element name="USformat" type="digits" minOccurs="0"/>
            <xs:element name="formatted" type="digits" minOccurs="0"/>
            <xs:element name="plain" type="xs:int" minOccurs="0"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="digits">
        <xs:sequence>
            <xs:element name="digit" type="digit" maxOccurs="4"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="digit">
        <xs:restriction base="xs:integer">
            <xs:minInclusive value="1"/>
            <xs:maxInclusive value="9"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="countries">
        <xs:annotation>
            <xs:documentation>
                The chosen countries of the Voice Single Step dynamic button. default: "United States".
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="country">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Afghanistan"/>
            <xs:enumeration value="Albania"/>
            <xs:enumeration value="Algeria"/>
            <xs:enumeration value="Andorra"/>
            <xs:enumeration value="Angola"/>
            <xs:enumeration value="Anguilla"/>
            <xs:enumeration value="Antigua and Barbuda"/>
            <xs:enumeration value="Argentine Republic"/>
            <xs:enumeration value="Armenia"/>
            <xs:enumeration value="Aruba"/>
            <xs:enumeration value="Ascension"/>
            <xs:enumeration value="Australia"/>
            <xs:enumeration value="Austria"/>
            <xs:enumeration value="Azerbaijani Republic"/>
            <xs:enumeration value="Bahamas"/>
            <xs:enumeration value="Bahrain"/>
            <xs:enumeration value="Bangladesh"/>
            <xs:enumeration value="Barbados"/>
            <xs:enumeration value="Belarus"/>
            <xs:enumeration value="Belgium"/>
            <xs:enumeration value="Belize"/>
            <xs:enumeration value="Benin"/>
            <xs:enumeration value="Bermuda"/>
            <xs:enumeration value="Bhutan"/>
            <xs:enumeration value="Bolivia"/>
            <xs:enumeration value="Bosnia &#38; Herzegovina"/>
            <xs:enumeration value="Botswana"/>
            <xs:enumeration value="Brazil"/>
            <xs:enumeration value="Brunei"/>
            <xs:enumeration value="Bulgaria"/>
            <xs:enumeration value="Burkina Faso"/>
            <xs:enumeration value="Burundi"/>
            <xs:enumeration value="Cambodia"/>
            <xs:enumeration value="Cameroon"/>
            <xs:enumeration value="Canada"/>
            <xs:enumeration value="Cape Verde"/>
            <xs:enumeration value="Cayman Islands"/>
            <xs:enumeration value="Central African Rep."/>
            <xs:enumeration value="Chad"/>
            <xs:enumeration value="Chile"/>
            <xs:enumeration value="China"/>
            <xs:enumeration value="Colombia"/>
            <xs:enumeration value="Congo"/>
            <xs:enumeration value="Cook Islands"/>
            <xs:enumeration value="Costa Rica"/>
            <xs:enumeration value="Croatia"/>
            <xs:enumeration value="Cuba"/>
            <xs:enumeration value="Cyprus"/>
            <xs:enumeration value="Czech Republic"/>
            <xs:enumeration value="Denmark"/>
            <xs:enumeration value="Diego Garcia"/>
            <xs:enumeration value="Djibouti"/>
            <xs:enumeration value="Dominican Republic"/>
            <xs:enumeration value="DPR Korea"/>
            <xs:enumeration value="East Timor."/>
            <xs:enumeration value="Ecuador"/>
            <xs:enumeration value="Egypt"/>
            <xs:enumeration value="El Salvador"/>
            <xs:enumeration value="Equatorial Guinea"/>
            <xs:enumeration value="Eritrea"/>
            <xs:enumeration value="Estonia"/>
            <xs:enumeration value="Ethiopia"/>
            <xs:enumeration value="Falkland Islands"/>
            <xs:enumeration value="Faroe Islands"/>
            <xs:enumeration value="Fiji"/>
            <xs:enumeration value="Finland"/>
            <xs:enumeration value="France"/>
            <xs:enumeration value="French Guiana"/>
            <xs:enumeration value="French Polynesia"/>
            <xs:enumeration value="Gabonese Republic"/>
            <xs:enumeration value="Gambia"/>
            <xs:enumeration value="Georgia"/>
            <xs:enumeration value="Germany"/>
            <xs:enumeration value="Ghana"/>
            <xs:enumeration value="Gibraltar"/>
            <xs:enumeration value="Greece"/>
            <xs:enumeration value="Greenland"/>
            <xs:enumeration value="Grenada"/>
            <xs:enumeration value="Guadeloupe"/>
            <xs:enumeration value="Guam"/>
            <xs:enumeration value="Guatemala"/>
            <xs:enumeration value="Guinea"/>
            <xs:enumeration value="Guinea-Bissau"/>
            <xs:enumeration value="GuriLand"/>
            <xs:enumeration value="Guyana"/>
            <xs:enumeration value="Haiti"/>
            <xs:enumeration value="Honduras"/>
            <xs:enumeration value="Hongkong, China"/>
            <xs:enumeration value="Hungary"/>
            <xs:enumeration value="Iceland"/>
            <xs:enumeration value="India"/>
            <xs:enumeration value="Indonesia"/>
            <xs:enumeration value="Iran"/>
            <xs:enumeration value="Iraq"/>
            <xs:enumeration value="Ireland"/>
            <xs:enumeration value="Israel"/>
            <xs:enumeration value="Italy"/>
            <xs:enumeration value="Ivory Coast"/>
            <xs:enumeration value="Jamaica"/>
            <xs:enumeration value="Japan"/>
            <xs:enumeration value="Jordan"/>
            <xs:enumeration value="Kazakhstan"/>
            <xs:enumeration value="Kenya"/>
            <xs:enumeration value="Kiribati"/>
            <xs:enumeration value="Korea"/>
            <xs:enumeration value="Kuwait"/>
            <xs:enumeration value="Kyrgyz Republic"/>
            <xs:enumeration value="Lao"/>
            <xs:enumeration value="Latvia"/>
            <xs:enumeration value="Lebanon"/>
            <xs:enumeration value="Lesotho"/>
            <xs:enumeration value="Liberia"/>
            <xs:enumeration value="Libya"/>
            <xs:enumeration value="Liechtenstein"/>
            <xs:enumeration value="Lithuania"/>
            <xs:enumeration value="Luxembourg"/>
            <xs:enumeration value="Macao, China"/>
            <xs:enumeration value="Macedonia"/>
            <xs:enumeration value="Madagascar"/>
            <xs:enumeration value="Malawi"/>
            <xs:enumeration value="Malaysia"/>
            <xs:enumeration value="Maldives"/>
            <xs:enumeration value="Mali"/>
            <xs:enumeration value="Malta"/>
            <xs:enumeration value="Marshall Islands"/>
            <xs:enumeration value="Martinique"/>
            <xs:enumeration value="Mauritania"/>
            <xs:enumeration value="Mauritius"/>
            <xs:enumeration value="Mayotte"/>
            <xs:enumeration value="Mexico"/>
            <xs:enumeration value="Micronesia"/>
            <xs:enumeration value="Moldova"/>
            <xs:enumeration value="Monaco"/>
            <xs:enumeration value="Mongolia"/>
            <xs:enumeration value="Montserrat"/>
            <xs:enumeration value="Morocco"/>
            <xs:enumeration value="Mozambique"/>
            <xs:enumeration value="Myanmar"/>
            <xs:enumeration value="Namibia"/>
            <xs:enumeration value="Nauru"/>
            <xs:enumeration value="Nepal"/>
            <xs:enumeration value="Netherlands"/>
            <xs:enumeration value="Netherlands Antilles"/>
            <xs:enumeration value="New Caledonia"/>
            <xs:enumeration value="New Zealand"/>
            <xs:enumeration value="Nicaragua"/>
            <xs:enumeration value="Niger"/>
            <xs:enumeration value="Nigeria"/>
            <xs:enumeration value="Niue"/>
            <xs:enumeration value="Norfolk Island"/>
            <xs:enumeration value="Northern Mariana Islands"/>
            <xs:enumeration value="Norway"/>
            <xs:enumeration value="Oman"/>
            <xs:enumeration value="Pakistan"/>
            <xs:enumeration value="Palau"/>
            <xs:enumeration value="Panama"/>
            <xs:enumeration value="Papua New Guinea"/>
            <xs:enumeration value="Paraguay"/>
            <xs:enumeration value="Peru"/>
            <xs:enumeration value="Philippines"/>
            <xs:enumeration value="Poland"/>
            <xs:enumeration value="Portugal"/>
            <xs:enumeration value="Puerto Rico"/>
            <xs:enumeration value="Qatar"/>
            <xs:enumeration value="Reunion Island."/>
            <xs:enumeration value="Romania"/>
            <xs:enumeration value="Russian Federation"/>
            <xs:enumeration value="Rwandese Republic"/>
            <xs:enumeration value="Saint Helena"/>
            <xs:enumeration value="Saint Kitts and Nevis"/>
            <xs:enumeration value="Saint Lucia"/>
            <xs:enumeration value="Samoa"/>
            <xs:enumeration value="San Marino"/>
            <xs:enumeration value="Sao Tome &#38; Principe"/>
            <xs:enumeration value="Saudi Arabia"/>
            <xs:enumeration value="Senegal"/>
            <xs:enumeration value="Serbia &#38; Montenegro"/>
            <xs:enumeration value="Seychelles"/>
            <xs:enumeration value="Sierra Leone"/>
            <xs:enumeration value="Singapore"/>
            <xs:enumeration value="Slovak Republic"/>
            <xs:enumeration value="Slovenia"/>
            <xs:enumeration value="Solomon Islands"/>
            <xs:enumeration value="Somalia"/>
            <xs:enumeration value="South Africa"/>
            <xs:enumeration value="Spain"/>
            <xs:enumeration value="Sri Lanka"/>
            <xs:enumeration value="St. Pierre/Miquolon"/>
            <xs:enumeration value="Sudan"/>
            <xs:enumeration value="Suriname"/>
            <xs:enumeration value="Swaziland"/>
            <xs:enumeration value="Sweden"/>
            <xs:enumeration value="Switzerland"/>
            <xs:enumeration value="Syrian Arab Republic"/>
            <xs:enumeration value="Taiwan"/>
            <xs:enumeration value="Tajikistan"/>
            <xs:enumeration value="Tanzania"/>
            <xs:enumeration value="Thailand"/>
            <xs:enumeration value="Togolese Republic"/>
            <xs:enumeration value="Tokelau"/>
            <xs:enumeration value="Tonga"/>
            <xs:enumeration value="Trinidad and Tobago"/>
            <xs:enumeration value="Tunisia"/>
            <xs:enumeration value="Turkey"/>
            <xs:enumeration value="Turkmenistan"/>
            <xs:enumeration value="Turks and Caicos Islands"/>
            <xs:enumeration value="Tuvalu"/>
            <xs:enumeration value="Uganda"/>
            <xs:enumeration value="Ukraine"/>
            <xs:enumeration value="United Arab Emirates"/>
            <xs:enumeration value="United Kingdom"/>
            <xs:enumeration value="United States"/>
            <xs:enumeration value="United States of America"/>
            <xs:enumeration value="Uruguay"/>
            <xs:enumeration value="Uzbekistan"/>
            <xs:enumeration value="Vanuatu"/>
            <xs:enumeration value="Vatican City State"/>
            <xs:enumeration value="Vatican City State"/>
            <xs:enumeration value="Venezuela"/>
            <xs:enumeration value="Vietnam"/>
            <xs:enumeration value="Wallis &#38; Futuna"/>
            <xs:enumeration value="Yemen"/>
            <xs:enumeration value="Zambia"/>
            <xs:enumeration value="Zimbabwe"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- InternalSkills -->
    <!-- Retrieve all internal skills response message type -->
    <xs:complexType name="internalSkills">
        <xs:sequence>
            <xs:element name="internalSkillRef" type="objRef" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!-- internalSkill message type -->
    <!-- internalSkill  -->
    <xs:complexType name="internalSkill">
        <xs:complexContent>
            <xs:extension base="internalSkillBase">
                <xs:sequence>
                    <xs:element name="name" type="lpString"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- updateInternalSkill  -->
    <xs:complexType name="updateInternalSkill">
        <xs:complexContent>
            <xs:extension base="internalSkillBase">
                <xs:sequence>
                    <!--<xs:element name="name" type="lpString"/>-->
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- internalSkillBase  -->
    <xs:complexType name="internalSkillBase">
        <xs:sequence>
            <xs:element name="description" type="lpString" default="" minOccurs="0"/>
            <!--General-->
            <xs:element name="email" type="lpString" minOccurs="0"/>
            <xs:element name="visitorProfileId" type="xs:long" default="-1" minOccurs="0"/>
            <xs:element name="adminProfile" type="xs:long" default="-1" minOccurs="0"/>
            <xs:element name="members" type="members" minOccurs="0"/>
            <!-- Only for retrieve (don't use for create/update)-->
            <xs:element name="RSI" type="xs:boolean" default="false" minOccurs="0"/>
            <!--Skill Time Zone -->
            <xs:element name="skillTimeZone" type="skillTimeZone" minOccurs="0"/>
            <xs:element name="securedSkill" type="xs:boolean" default="false" minOccurs="0"/>
            <!--Ranking-->
            <xs:element name="rankBasedInvitations" type="xs:boolean" default="false" minOccurs="0"/>
            <xs:element name="rankBasedRouting" type="xs:boolean" default="false" minOccurs="0"/>
            <xs:element name="minRankForQueuePriority" type="xs:int" default="1" minOccurs="0"/>
            <!--Voice-->
            <xs:element name="skillPhoneNumber" type="xs:string" minOccurs="0"/>
            <xs:element name="externalPhone" type="xs:boolean" minOccurs="0"/>
            <xs:element name="showCallerId" type="xs:boolean" minOccurs="0"/>
            <!--Scheduled Callbacks-->
            <xs:element name="inheritSettingFromSite" type="xs:boolean" default="true" minOccurs="0"/>
            <xs:element name="shiftScheduler" type="status" default="Internal" minOccurs="0"/>
            <xs:element name="availableTimeRange" type="availableTimeRange" minOccurs="0"/>
            <xs:element name="availableDays" type="days" minOccurs="0"/>
            <xs:element name="maxScheduledCallsPerHour" type="xs:int" default="10" minOccurs="0"/>
            <xs:element name="initiateBy" type="status" default="Internal" minOccurs="0"/>
            <xs:element name="maxMinutesDelayBeforeAbandoning" type="xs:int" default="15" minOccurs="0"/>
            <xs:element name="availabilityPolicy" type="availabilityPolicy" default="Available within" minOccurs="0"/>
            <xs:element name="availabilityPolicyWithinSeconds" type="xs:int" default="15" minOccurs="0"/>
            <xs:element name="extensionWaitTimeSeconds" type="xs:int" default="0" minOccurs="0"/>

        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="availableTimeRange">
        <xs:sequence>
            <!--availableTime elements should have GMT timezone, e.g. xx:xx:xxZ -->
            <xs:element name="timeZone" type="timeZone"/>
            <xs:element name="availableTimeFrom" type="xs:time"/>
            <xs:element name="availableTimeTo" type="xs:time"/>
        </xs:sequence>
    </xs:complexType>
    <!-- virtualSkill -->
    <!-- Retrieve all virtual skills response message type -->
    <xs:complexType name="virtualSkills">
        <xs:sequence>
            <xs:element name="virtualSkillRef" type="objRef" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!-- virtualSkill  -->
    <xs:complexType name="virtualSkill">
        <xs:complexContent>
            <xs:extension base="virtualSkillBase">
                <xs:sequence>
                    <xs:element name="name" type="lpString"/>
                    <!--<xs:element name="skillType" type="skillType" minOccurs="0" maxOccurs="1" default="Internal"/>-->
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- updateVirtualSkill  -->
    <xs:complexType name="updateVirtualSkill">
        <xs:complexContent>
            <xs:extension base="virtualSkillBase">
                <xs:sequence>
                    <!--<xs:element name="name" type="lpString"/>-->
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="virtualSkillBase">
        <xs:sequence>
            <xs:element name="description" type="lpString" default="" minOccurs="0"/>
            <xs:element name="transferToAccountId" type="lpString"/>
            <xs:element name="transferToAccountName" type="lpString"/>
            <xs:element name="transferToSkill" type="lpString"/>
            <xs:element name="transferChat" type="xs:boolean" default="true"/>
            <xs:element name="transferVoice" type="xs:boolean" default="false"/>
            <xs:element name="transferFromSkills" type="skillIds"/>
            <xs:element name="transferData" type="transferData"/>
            <xs:element name="transferAllCustomVariables " type="xs:boolean" default="false"/>
            <xs:element name="specificVariablesToTransfer" type="varsList" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="varsList">
        <xs:list itemType="lpString"/>
    </xs:simpleType>
    <xs:simpleType name="status">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Internal"/>
            <xs:enumeration value="Remote System"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="skillType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Internal"/>
            <xs:enumeration value="Virtual"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="members">
        <xs:sequence>
            <xs:element name="memberId" type="idRef" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="days">
        <xs:sequence>
            <xs:element name="Sunday" type="xs:boolean" default="true"/>
            <xs:element name="Monday" type="xs:boolean" default="true"/>
            <xs:element name="Tuesday" type="xs:boolean" default="true"/>
            <xs:element name="Wednesday" type="xs:boolean" default="true"/>
            <xs:element name="Thursday" type="xs:boolean" default="true"/>
            <xs:element name="Friday" type="xs:boolean" default="true"/>
            <xs:element name="Saturday" type="xs:boolean" default="true"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="availabilityPolicy">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Available within"/>
            <xs:enumeration value="Online operators"/>
            <xs:enumeration value="Always available"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="transferData">
        <xs:sequence>
            <xs:element name="ChatTranscript" type="xs:boolean" default="false"/>
            <xs:element name="BrowsingHistory" type="xs:boolean" default="false"/>
            <xs:element name="Skill" type="xs:boolean" default="false"/>
            <xs:element name="Alerts" type="xs:boolean" default="false"/>
            <xs:element name="Operator" type="xs:boolean" default="false"/>
        </xs:sequence>
    </xs:complexType>
    <!-- operators -->
    <xs:complexType name="operators">
        <xs:sequence>
            <xs:element name="operatorRef" type="operatorRef" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="operatorRef">
        <xs:sequence>
            <xs:element name="id" type="xs:long"/>
            <xs:element name="loginName" type="lpString"/>
            <xs:element name="enabled" type="xs:boolean"/>
        </xs:sequence>
        <xs:attribute ref="xlink:href"/>
    </xs:complexType>
    <!-- operator update-->
    <xs:complexType name="updateOperator">
        <xs:sequence>
            <xs:element name="enabled" type="xs:boolean" minOccurs="0"/>
            <xs:element name="displayName" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="lpString">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="256"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="nickName" type="lpString" minOccurs="0"/>
            <xs:element name="employeeId" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="130"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="showCallerId" type="xs:boolean" minOccurs="0"/>
            <xs:element name="changePasswordOnNextLogin" type="xs:boolean" minOccurs="0"/>
            <xs:element name="emailAddress" type="lpString" minOccurs="0"/>
            <xs:element name="phoneConsoleId" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="9999"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="maxNumberOfChats" minOccurs="0">
                <xs:simpleType>
                    <xs:union>
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="Unlimited"/>
                            </xs:restriction>
                        </xs:simpleType>
                        <xs:simpleType>
                            <xs:restriction base="xs:int">
                                <xs:minInclusive value="0"/>
                                <xs:maxInclusive value="10"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:union>
                </xs:simpleType>
            </xs:element>
            <xs:element name="maxNumberOfChatsWhileCalling" minOccurs="0">
                <xs:simpleType>
                    <xs:union>
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="Unlimited"/>
                            </xs:restriction>
                        </xs:simpleType>
                        <xs:simpleType>
                            <xs:restriction base="xs:int">
                                <xs:minInclusive value="0"/>
                                <xs:maxInclusive value="10"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:union>
                </xs:simpleType>
            </xs:element>
            <xs:element name="callPresentationTimeout" minOccurs="0">
                <xs:complexType>
                    <xs:choice>
                        <xs:element name="inherit" type="xs:boolean" minOccurs="0"/>
                        <xs:element name="timeoutAfter" minOccurs="0">
                            <xs:simpleType>
                                <xs:restriction base="xs:int">
                                    <xs:minInclusive value="1"/>
                                    <xs:maxInclusive value="100000"/>
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:element>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
            <xs:element name="SetOperatorToAwayIfCallPresentationsTimeOut" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="inherit"/>
                        <xs:enumeration value="yes"/>
                        <xs:enumeration value="no"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="acdAutoAnswerMode" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:minInclusive value="-1"/>
                        <xs:maxInclusive value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="maxNumberOfTicketsInWorkspace" minOccurs="0">
                <xs:simpleType>
                    <xs:union>
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="Unlimited"/>
                            </xs:restriction>
                        </xs:simpleType>
                        <xs:simpleType>
                            <xs:restriction base="xs:int">
                                <xs:minInclusive value="0"/>
                                <xs:maxInclusive value="20"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:union>
                </xs:simpleType>
            </xs:element>
            <xs:element name="permissionGroup" type="xs:long" minOccurs="0"/>
            <xs:element name="acceptIncomingChats" type="xs:boolean" minOccurs="0"/>
            <xs:element name="acceptIncomingPhoneCalls" type="xs:boolean" minOccurs="0"/>
            <xs:element name="useDesktopSharing" type="xs:boolean" minOccurs="0"/>
            <xs:element name="useCoBrowse" type="xs:boolean" minOccurs="0"/>
            <xs:element name="allowTalkbyPCCallIfNoOfConcurrentChatsIsLessThan" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="99"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="extension" type="extensionPhoneNumber" maxOccurs="1" minOccurs="0"/>
            <xs:element name="skills" type="skillIds" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <!-- new/view operator -->
    <xs:complexType name="operator">
        <xs:sequence>
            <xs:element name="loginName" type="lpString"/>
            <xs:element name="password">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="100"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="enabled" type="xs:boolean"/>
            <xs:element name="displayName" default="" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="lpString">
                        <xs:maxLength value="256"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="nickName" type="lpString"/>
            <xs:element name="employeeId" default="" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="130"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="showCallerId" type="xs:boolean" default="true" minOccurs="0"/>
            <xs:element name="changePasswordOnNextLogin" type="xs:boolean" default="false" minOccurs="0"/>
            <xs:element name="emailAddress" type="lpString"/>
            <xs:element name="phoneConsoleId" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="9999"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="maxNumberOfChats" default="Unlimited" minOccurs="0">
                <xs:simpleType>
                    <xs:union>
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="Unlimited"/>
                            </xs:restriction>
                        </xs:simpleType>
                        <xs:simpleType>
                            <xs:restriction base="xs:int">
                                <xs:minInclusive value="0"/>
                                <xs:maxInclusive value="10"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:union>
                </xs:simpleType>
            </xs:element>
            <xs:element name="maxNumberOfChatsWhileCalling" default="Unlimited" minOccurs="0">
                <xs:simpleType>
                    <xs:union>
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="Unlimited"/>
                            </xs:restriction>
                        </xs:simpleType>
                        <xs:simpleType>
                            <xs:restriction base="xs:int">
                                <xs:minInclusive value="0"/>
                                <xs:maxInclusive value="10"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:union>
                </xs:simpleType>
            </xs:element>
            <xs:element name="callPresentationTimeout" minOccurs="0">
                <xs:complexType>
                    <xs:choice>
                        <xs:element name="inherit" type="xs:boolean" minOccurs="0"/>
                        <xs:element name="timeoutAfter" minOccurs="0">
                            <xs:simpleType>
                                <xs:restriction base="xs:int">
                                    <xs:minInclusive value="1"/>
                                    <xs:maxInclusive value="100000"/>
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:element>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
            <xs:element name="SetoperatorToAwayIfCallPresentationsTimeOut" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="inherit"/>
                        <xs:enumeration value="yes"/>
                        <xs:enumeration value="no"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="acdAutoAnswerMode" default="0" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:minInclusive value="-1"/>
                        <xs:maxInclusive value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="maxNumberOfTicketsInWorkspace" default="Unlimited" minOccurs="0">
                <xs:simpleType>
                    <xs:union>
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="Unlimited"/>
                            </xs:restriction>
                        </xs:simpleType>
                        <xs:simpleType>
                            <xs:restriction base="xs:int">
                                <xs:minInclusive value="0"/>
                                <xs:maxInclusive value="20"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:union>
                </xs:simpleType>
            </xs:element>
            <xs:element name="permissionGroup" type="xs:long"/>
            <xs:element name="acceptIncomingChats" type="xs:boolean" default="true" minOccurs="0"/>
            <xs:element name="acceptIncomingPhoneCalls" type="xs:boolean" default="true" minOccurs="0"/>
            <xs:element name="useDesktopSharing" type="xs:boolean" default="false" minOccurs="0"/>
            <xs:element name="useCoBrowse" type="xs:boolean" default="true" minOccurs="0"/>
            <xs:element name="allowTalkbyPCCallIfNoOfConcurrentChatsIsLessThan" default="1" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="99"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="skills" type="skillIds" minOccurs="0"/>
            <xs:element name="extension" type="extensionPhoneNumber" maxOccurs="1" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="skillIds">
        <xs:sequence>
            <xs:element name="skillid" type="xs:long" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="skillTimeZone">
        <xs:choice>
            <xs:element name="inherit" type="lpString" minOccurs="0"/>
            <xs:element name="timeZone" type="timeZone"  minOccurs="0"/>
        </xs:choice>
    </xs:complexType>

    <xs:simpleType name="timeZone">
        <xs:restriction base="xs:string">
            <xs:enumeration value="MIT"/>
            <xs:enumeration value="Pacific/Apia"/>
            <xs:enumeration value="Pacific/Midway"/>
            <xs:enumeration value="Pacific/Niue"/>
            <xs:enumeration value="Pacific/Pago_Pago"/>
            <xs:enumeration value="Pacific/Samoa"/>
            <xs:enumeration value="US/Samoa"/>
            <xs:enumeration value="America/Adak"/>
            <xs:enumeration value="America/Atka"/>
            <xs:enumeration value="HST"/>
            <xs:enumeration value="Pacific/Fakaofo"/>
            <xs:enumeration value="Pacific/Honolulu"/>
            <xs:enumeration value="Pacific/Johnston"/>
            <xs:enumeration value="Pacific/Rarotonga"/>
            <xs:enumeration value="Pacific/Tahiti"/>
            <xs:enumeration value="SystemV/HST10"/>
            <xs:enumeration value="US/Aleutian"/>
            <xs:enumeration value="US/Hawaii"/>
            <xs:enumeration value="AST"/>
            <xs:enumeration value="America/Anchorage"/>
            <xs:enumeration value="America/Juneau"/>
            <xs:enumeration value="America/Nome"/>
            <xs:enumeration value="America/Yakutat"/>
            <xs:enumeration value="Pacific/Gambier"/>
            <xs:enumeration value="SystemV/YST9"/>
            <xs:enumeration value="SystemV/YST9YDT"/>
            <xs:enumeration value="US/Alaska"/>
            <xs:enumeration value="America/Dawson"/>
            <xs:enumeration value="America/Ensenada"/>
            <xs:enumeration value="America/Los_Angeles"/>
            <xs:enumeration value="America/Tijuana"/>
            <xs:enumeration value="America/Vancouver"/>
            <xs:enumeration value="America/Whitehorse"/>
            <xs:enumeration value="Canada/Pacific"/>
            <xs:enumeration value="Canada/Yukon"/>
            <xs:enumeration value="Mexico/BajaNorte"/>
            <xs:enumeration value="PST"/>
            <xs:enumeration value="PST8PDT"/>
            <xs:enumeration value="Pacific/Pitcairn"/>
            <xs:enumeration value="SystemV/PST8"/>
            <xs:enumeration value="SystemV/PST8PDT"/>
            <xs:enumeration value="US/Pacific"/>
            <xs:enumeration value="US/Pacific-New"/>
            <xs:enumeration value="America/Boise"/>
            <xs:enumeration value="America/Cambridge_Bay"/>
            <xs:enumeration value="America/Chihuahua"/>
            <xs:enumeration value="America/Dawson_Creek"/>
            <xs:enumeration value="America/Denver"/>
            <xs:enumeration value="America/Edmonton"/>
            <xs:enumeration value="America/Hermosillo"/>
            <xs:enumeration value="America/Inuvik"/>
            <xs:enumeration value="America/Mazatlan"/>
            <xs:enumeration value="America/Phoenix"/>
            <xs:enumeration value="America/Shiprock"/>
            <xs:enumeration value="America/Yellowknife"/>
            <xs:enumeration value="Canada/Mountain"/>
            <xs:enumeration value="MST"/>
            <xs:enumeration value="MST7MDT"/>
            <xs:enumeration value="Mexico/BajaSur"/>
            <xs:enumeration value="Navajo"/>
            <xs:enumeration value="PNT"/>
            <xs:enumeration value="SystemV/MST7"/>
            <xs:enumeration value="SystemV/MST7MDT"/>
            <xs:enumeration value="US/Arizona"/>
            <xs:enumeration value="US/Mountain"/>
            <xs:enumeration value="America/Belize"/>
            <xs:enumeration value="America/Cancun"/>
            <xs:enumeration value="America/Chicago"/>
            <xs:enumeration value="America/Costa_Rica"/>
            <xs:enumeration value="America/El_Salvador"/>
            <xs:enumeration value="America/Guatemala"/>
            <xs:enumeration value="America/Indiana/Knox"/>
            <xs:enumeration value="America/Indiana/Tell_City"/>
            <xs:enumeration value="America/Knox_IN"/>
            <xs:enumeration value="America/Managua"/>
            <xs:enumeration value="America/Menominee"/>
            <xs:enumeration value="America/Merida"/>
            <xs:enumeration value="America/Mexico_City"/>
            <xs:enumeration value="America/Monterrey"/>
            <xs:enumeration value="America/North_Dakota/Center"/>
            <xs:enumeration value="America/North_Dakota/New_Salem"/>
            <xs:enumeration value="America/Rainy_River"/>
            <xs:enumeration value="America/Rankin_Inlet"/>
            <xs:enumeration value="America/Regina"/>
            <xs:enumeration value="America/Swift_Current"/>
            <xs:enumeration value="America/Tegucigalpa"/>
            <xs:enumeration value="America/Winnipeg"/>
            <xs:enumeration value="CST"/>
            <xs:enumeration value="CST6CDT"/>
            <xs:enumeration value="Canada/Central"/>
            <xs:enumeration value="Canada/East-Saskatchewan"/>
            <xs:enumeration value="Canada/Saskatchewan"/>
            <xs:enumeration value="Chile/EasterIsland"/>
            <xs:enumeration value="Mexico/General"/>
            <xs:enumeration value="Pacific/Easter"/>
            <xs:enumeration value="Pacific/Galapagos"/>
            <xs:enumeration value="SystemV/CST6"/>
            <xs:enumeration value="SystemV/CST6CDT"/>
            <xs:enumeration value="US/Central"/>
            <xs:enumeration value="US/Indiana-Starke"/>
            <xs:enumeration value="America/Atikokan"/>
            <xs:enumeration value="America/Bogota"/>
            <xs:enumeration value="America/Cayman"/>
            <xs:enumeration value="America/Coral_Harbour"/>
            <xs:enumeration value="America/Detroit"/>
            <xs:enumeration value="America/Fort_Wayne"/>
            <xs:enumeration value="America/Grand_Turk"/>
            <xs:enumeration value="America/Guayaquil"/>
            <xs:enumeration value="America/Havana"/>
            <xs:enumeration value="America/Indiana/Indianapolis"/>
            <xs:enumeration value="America/Indiana/Marengo"/>
            <xs:enumeration value="America/Indiana/Petersburg"/>
            <xs:enumeration value="America/Indiana/Vevay"/>
            <xs:enumeration value="America/Indiana/Vincennes"/>
            <xs:enumeration value="America/Indiana/Winamac"/>
            <xs:enumeration value="America/Indianapolis"/>
            <xs:enumeration value="America/Iqaluit"/>
            <xs:enumeration value="America/Jamaica"/>
            <xs:enumeration value="America/Kentucky/Louisville"/>
            <xs:enumeration value="America/Kentucky/Monticello"/>
            <xs:enumeration value="America/Lima"/>
            <xs:enumeration value="America/Louisville"/>
            <xs:enumeration value="America/Montreal"/>
            <xs:enumeration value="America/Nassau"/>
            <xs:enumeration value="America/New_York"/>
            <xs:enumeration value="America/Nipigon"/>
            <xs:enumeration value="America/Panama"/>
            <xs:enumeration value="America/Pangnirtung"/>
            <xs:enumeration value="America/Port-au-Prince"/>
            <xs:enumeration value="America/Resolute"/>
            <xs:enumeration value="America/Thunder_Bay"/>
            <xs:enumeration value="America/Toronto"/>
            <xs:enumeration value="Canada/Eastern"/>
            <xs:enumeration value="Cuba"/>
            <xs:enumeration value="EST"/>
            <xs:enumeration value="EST5EDT"/>
            <xs:enumeration value="IET"/>
            <xs:enumeration value="Jamaica"/>
            <xs:enumeration value="SystemV/EST5"/>
            <xs:enumeration value="SystemV/EST5EDT"/>
            <xs:enumeration value="US/East-Indiana"/>
            <xs:enumeration value="US/Eastern"/>
            <xs:enumeration value="US/Michigan"/>
            <xs:enumeration value="America/Anguilla"/>
            <xs:enumeration value="America/Antigua"/>
            <xs:enumeration value="America/Aruba"/>
            <xs:enumeration value="America/Asuncion"/>
            <xs:enumeration value="America/Barbados"/>
            <xs:enumeration value="America/Blanc-Sablon"/>
            <xs:enumeration value="America/Boa_Vista"/>
            <xs:enumeration value="America/Campo_Grande"/>
            <xs:enumeration value="America/Cuiaba"/>
            <xs:enumeration value="America/Curacao"/>
            <xs:enumeration value="America/Dominica"/>
            <xs:enumeration value="America/Eirunepe"/>
            <xs:enumeration value="America/Glace_Bay"/>
            <xs:enumeration value="America/Goose_Bay"/>
            <xs:enumeration value="America/Grenada"/>
            <xs:enumeration value="America/Guadeloupe"/>
            <xs:enumeration value="America/Guyana"/>
            <xs:enumeration value="America/Halifax"/>
            <xs:enumeration value="America/La_Paz"/>
            <xs:enumeration value="America/Manaus"/>
            <xs:enumeration value="America/Marigot"/>
            <xs:enumeration value="America/Martinique"/>
            <xs:enumeration value="America/Moncton"/>
            <xs:enumeration value="America/Montserrat"/>
            <xs:enumeration value="America/Port_of_Spain"/>
            <xs:enumeration value="America/Porto_Acre"/>
            <xs:enumeration value="America/Porto_Velho"/>
            <xs:enumeration value="America/Puerto_Rico"/>
            <xs:enumeration value="America/Rio_Branco"/>
            <xs:enumeration value="America/Santiago"/>
            <xs:enumeration value="America/Santo_Domingo"/>
            <xs:enumeration value="America/St_Barthelemy"/>
            <xs:enumeration value="America/St_Kitts"/>
            <xs:enumeration value="America/St_Lucia"/>
            <xs:enumeration value="America/St_Thomas"/>
            <xs:enumeration value="America/St_Vincent"/>
            <xs:enumeration value="America/Thule"/>
            <xs:enumeration value="America/Tortola"/>
            <xs:enumeration value="America/Virgin"/>
            <xs:enumeration value="Antarctica/Palmer"/>
            <xs:enumeration value="Atlantic/Bermuda"/>
            <xs:enumeration value="Atlantic/Stanley"/>
            <xs:enumeration value="Brazil/Acre"/>
            <xs:enumeration value="Brazil/West"/>
            <xs:enumeration value="Canada/Atlantic"/>
            <xs:enumeration value="Chile/Continental"/>
            <xs:enumeration value="PRT"/>
            <xs:enumeration value="SystemV/AST4"/>
            <xs:enumeration value="SystemV/AST4ADT"/>
            <xs:enumeration value="AGT"/>
            <xs:enumeration value="America/Araguaina"/>
            <xs:enumeration value="America/Argentina/Buenos_Aires"/>
            <xs:enumeration value="America/Argentina/Catamarca"/>
            <xs:enumeration value="America/Argentina/ComodRivadavia"/>
            <xs:enumeration value="America/Argentina/Cordoba"/>
            <xs:enumeration value="America/Argentina/Jujuy"/>
            <xs:enumeration value="America/Argentina/La_Rioja"/>
            <xs:enumeration value="America/Argentina/Mendoza"/>
            <xs:enumeration value="America/Argentina/Rio_Gallegos"/>
            <xs:enumeration value="America/Argentina/Salta"/>
            <xs:enumeration value="America/Argentina/San_Juan"/>
            <xs:enumeration value="America/Argentina/San_Luis"/>
            <xs:enumeration value="America/Argentina/Tucuman"/>
            <xs:enumeration value="America/Argentina/Ushuaia"/>
            <xs:enumeration value="America/Bahia"/>
            <xs:enumeration value="America/Belem"/>
            <xs:enumeration value="America/Buenos_Aires"/>
            <xs:enumeration value="America/Catamarca"/>
            <xs:enumeration value="America/Cayenne"/>
            <xs:enumeration value="America/Cordoba"/>
            <xs:enumeration value="America/Fortaleza"/>
            <xs:enumeration value="America/Godthab"/>
            <xs:enumeration value="America/Jujuy"/>
            <xs:enumeration value="America/Maceio"/>
            <xs:enumeration value="America/Mendoza"/>
            <xs:enumeration value="America/Miquelon"/>
            <xs:enumeration value="America/Montevideo"/>
            <xs:enumeration value="America/Paramaribo"/>
            <xs:enumeration value="America/Recife"/>
            <xs:enumeration value="America/Rosario"/>
            <xs:enumeration value="America/Santarem"/>
            <xs:enumeration value="America/Sao_Paulo"/>
            <xs:enumeration value="Antarctica/Rothera"/>
            <xs:enumeration value="BET"/>
            <xs:enumeration value="Brazil/East"/>
            <xs:enumeration value="America/Noronha"/>
            <xs:enumeration value="Atlantic/South_Georgia"/>
            <xs:enumeration value="Brazil/DeNoronha"/>
            <xs:enumeration value="America/Scoresbysund"/>
            <xs:enumeration value="Atlantic/Azores"/>
            <xs:enumeration value="Atlantic/Cape_Verde"/>
            <xs:enumeration value="Africa/Abidjan"/>
            <xs:enumeration value="Africa/Accra"/>
            <xs:enumeration value="Africa/Bamako"/>
            <xs:enumeration value="Africa/Banjul"/>
            <xs:enumeration value="Africa/Bissau"/>
            <xs:enumeration value="Africa/Casablanca"/>
            <xs:enumeration value="Africa/Conakry"/>
            <xs:enumeration value="Africa/Dakar"/>
            <xs:enumeration value="Africa/El_Aaiun"/>
            <xs:enumeration value="Africa/Freetown"/>
            <xs:enumeration value="Africa/Lome"/>
            <xs:enumeration value="Africa/Monrovia"/>
            <xs:enumeration value="Africa/Nouakchott"/>
            <xs:enumeration value="Africa/Ouagadougou"/>
            <xs:enumeration value="Africa/Sao_Tome"/>
            <xs:enumeration value="Africa/Timbuktu"/>
            <xs:enumeration value="America/Danmarkshavn"/>
            <xs:enumeration value="Atlantic/Canary"/>
            <xs:enumeration value="Atlantic/Faeroe"/>
            <xs:enumeration value="Atlantic/Faroe"/>
            <xs:enumeration value="Atlantic/Madeira"/>
            <xs:enumeration value="Atlantic/Reykjavik"/>
            <xs:enumeration value="Atlantic/St_Helena"/>
            <xs:enumeration value="Eire"/>
            <xs:enumeration value="Etc/Greenwich"/>
            <xs:enumeration value="Etc/UCT"/>
            <xs:enumeration value="Etc/UTC"/>
            <xs:enumeration value="Etc/Universal"/>
            <xs:enumeration value="Etc/Zulu"/>
            <xs:enumeration value="Europe/Belfast"/>
            <xs:enumeration value="Europe/Dublin"/>
            <xs:enumeration value="Europe/Guernsey"/>
            <xs:enumeration value="Europe/Isle_of_Man"/>
            <xs:enumeration value="Europe/Jersey"/>
            <xs:enumeration value="Europe/Lisbon"/>
            <xs:enumeration value="Europe/London"/>
            <xs:enumeration value="GB"/>
            <xs:enumeration value="GB-Eire"/>
            <xs:enumeration value="Greenwich"/>
            <xs:enumeration value="Iceland"/>
            <xs:enumeration value="Portugal"/>
            <xs:enumeration value="UCT"/>
            <xs:enumeration value="UTC"/>
            <xs:enumeration value="Universal"/>
            <xs:enumeration value="WET"/>
            <xs:enumeration value="Zulu"/>
            <xs:enumeration value="Africa/Algiers"/>
            <xs:enumeration value="Africa/Bangui"/>
            <xs:enumeration value="Africa/Brazzaville"/>
            <xs:enumeration value="Africa/Ceuta"/>
            <xs:enumeration value="Africa/Douala"/>
            <xs:enumeration value="Africa/Kinshasa"/>
            <xs:enumeration value="Africa/Lagos"/>
            <xs:enumeration value="Africa/Libreville"/>
            <xs:enumeration value="Africa/Luanda"/>
            <xs:enumeration value="Africa/Malabo"/>
            <xs:enumeration value="Africa/Ndjamena"/>
            <xs:enumeration value="Africa/Niamey"/>
            <xs:enumeration value="Africa/Porto-Novo"/>
            <xs:enumeration value="Africa/Tunis"/>
            <xs:enumeration value="Africa/Windhoek"/>
            <xs:enumeration value="Arctic/Longyearbyen"/>
            <xs:enumeration value="Atlantic/Jan_Mayen"/>
            <xs:enumeration value="CET"/>
            <xs:enumeration value="ECT"/>
            <xs:enumeration value="Europe/Amsterdam"/>
            <xs:enumeration value="Europe/Andorra"/>
            <xs:enumeration value="Europe/Belgrade"/>
            <xs:enumeration value="Europe/Berlin"/>
            <xs:enumeration value="Europe/Bratislava"/>
            <xs:enumeration value="Europe/Brussels"/>
            <xs:enumeration value="Europe/Budapest"/>
            <xs:enumeration value="Europe/Copenhagen"/>
            <xs:enumeration value="Europe/Gibraltar"/>
            <xs:enumeration value="Europe/Ljubljana"/>
            <xs:enumeration value="Europe/Luxembourg"/>
            <xs:enumeration value="Europe/Madrid"/>
            <xs:enumeration value="Europe/Malta"/>
            <xs:enumeration value="Europe/Monaco"/>
            <xs:enumeration value="Europe/Oslo"/>
            <xs:enumeration value="Europe/Paris"/>
            <xs:enumeration value="Europe/Podgorica"/>
            <xs:enumeration value="Europe/Prague"/>
            <xs:enumeration value="Europe/Rome"/>
            <xs:enumeration value="Europe/San_Marino"/>
            <xs:enumeration value="Europe/Sarajevo"/>
            <xs:enumeration value="Europe/Skopje"/>
            <xs:enumeration value="Europe/Stockholm"/>
            <xs:enumeration value="Europe/Tirane"/>
            <xs:enumeration value="Europe/Vaduz"/>
            <xs:enumeration value="Europe/Vatican"/>
            <xs:enumeration value="Europe/Vienna"/>
            <xs:enumeration value="Europe/Warsaw"/>
            <xs:enumeration value="Europe/Zagreb"/>
            <xs:enumeration value="Europe/Zurich"/>
            <xs:enumeration value="MET"/>
            <xs:enumeration value="Poland"/>
            <xs:enumeration value="ART"/>
            <xs:enumeration value="Africa/Blantyre"/>
            <xs:enumeration value="Africa/Bujumbura"/>
            <xs:enumeration value="Africa/Cairo"/>
            <xs:enumeration value="Africa/Gaborone"/>
            <xs:enumeration value="Africa/Harare"/>
            <xs:enumeration value="Africa/Johannesburg"/>
            <xs:enumeration value="Africa/Kigali"/>
            <xs:enumeration value="Africa/Lubumbashi"/>
            <xs:enumeration value="Africa/Lusaka"/>
            <xs:enumeration value="Africa/Maputo"/>
            <xs:enumeration value="Africa/Maseru"/>
            <xs:enumeration value="Africa/Mbabane"/>
            <xs:enumeration value="Africa/Tripoli"/>
            <xs:enumeration value="Asia/Amman"/>
            <xs:enumeration value="Asia/Beirut"/>
            <xs:enumeration value="Asia/Damascus"/>
            <xs:enumeration value="Asia/Gaza"/>
            <xs:enumeration value="Asia/Istanbul"/>
            <xs:enumeration value="Asia/Jerusalem"/>
            <xs:enumeration value="Asia/Nicosia"/>
            <xs:enumeration value="Asia/Tel_Aviv"/>
            <xs:enumeration value="CAT"/>
            <xs:enumeration value="EET"/>
            <xs:enumeration value="Egypt"/>
            <xs:enumeration value="Europe/Athens"/>
            <xs:enumeration value="Europe/Bucharest"/>
            <xs:enumeration value="Europe/Chisinau"/>
            <xs:enumeration value="Europe/Helsinki"/>
            <xs:enumeration value="Europe/Istanbul"/>
            <xs:enumeration value="Europe/Kaliningrad"/>
            <xs:enumeration value="Europe/Kiev"/>
            <xs:enumeration value="Europe/Mariehamn"/>
            <xs:enumeration value="Europe/Minsk"/>
            <xs:enumeration value="Europe/Nicosia"/>
            <xs:enumeration value="Europe/Riga"/>
            <xs:enumeration value="Europe/Simferopol"/>
            <xs:enumeration value="Europe/Sofia"/>
            <xs:enumeration value="Europe/Tallinn"/>
            <xs:enumeration value="Europe/Tiraspol"/>
            <xs:enumeration value="Europe/Uzhgorod"/>
            <xs:enumeration value="Europe/Vilnius"/>
            <xs:enumeration value="Europe/Zaporozhye"/>
            <xs:enumeration value="Israel"/>
            <xs:enumeration value="Libya"/>
            <xs:enumeration value="Turkey"/>
            <xs:enumeration value="Africa/Addis_Ababa"/>
            <xs:enumeration value="Africa/Asmara"/>
            <xs:enumeration value="Africa/Asmera"/>
            <xs:enumeration value="Africa/Dar_es_Salaam"/>
            <xs:enumeration value="Africa/Djibouti"/>
            <xs:enumeration value="Africa/Kampala"/>
            <xs:enumeration value="Africa/Khartoum"/>
            <xs:enumeration value="Africa/Mogadishu"/>
            <xs:enumeration value="Africa/Nairobi"/>
            <xs:enumeration value="Antarctica/Syowa"/>
            <xs:enumeration value="Asia/Aden"/>
            <xs:enumeration value="Asia/Baghdad"/>
            <xs:enumeration value="Asia/Bahrain"/>
            <xs:enumeration value="Asia/Kuwait"/>
            <xs:enumeration value="Asia/Qatar"/>
            <xs:enumeration value="Asia/Riyadh"/>
            <xs:enumeration value="EAT"/>
            <xs:enumeration value="Europe/Moscow"/>
            <xs:enumeration value="Europe/Volgograd"/>
            <xs:enumeration value="Indian/Antananarivo"/>
            <xs:enumeration value="Indian/Comoro"/>
            <xs:enumeration value="Indian/Mayotte"/>
            <xs:enumeration value="W-SU"/>
            <xs:enumeration value="Asia/Baku"/>
            <xs:enumeration value="Asia/Dubai"/>
            <xs:enumeration value="Asia/Muscat"/>
            <xs:enumeration value="Asia/Tbilisi"/>
            <xs:enumeration value="Asia/Yerevan"/>
            <xs:enumeration value="Europe/Samara"/>
            <xs:enumeration value="Indian/Mahe"/>
            <xs:enumeration value="Indian/Mauritius"/>
            <xs:enumeration value="Indian/Reunion"/>
            <xs:enumeration value="NET"/>
            <xs:enumeration value="Asia/Aqtau"/>
            <xs:enumeration value="Asia/Aqtobe"/>
            <xs:enumeration value="Asia/Ashgabat"/>
            <xs:enumeration value="Asia/Ashkhabad"/>
            <xs:enumeration value="Asia/Dushanbe"/>
            <xs:enumeration value="Asia/Karachi"/>
            <xs:enumeration value="Asia/Oral"/>
            <xs:enumeration value="Asia/Samarkand"/>
            <xs:enumeration value="Asia/Tashkent"/>
            <xs:enumeration value="Asia/Yekaterinburg"/>
            <xs:enumeration value="Indian/Kerguelen"/>
            <xs:enumeration value="Indian/Maldives"/>
            <xs:enumeration value="PLT"/>
            <xs:enumeration value="Antarctica/Mawson"/>
            <xs:enumeration value="Antarctica/Vostok"/>
            <xs:enumeration value="Asia/Almaty"/>
            <xs:enumeration value="Asia/Bishkek"/>
            <xs:enumeration value="Asia/Dacca"/>
            <xs:enumeration value="Asia/Dhaka"/>
            <xs:enumeration value="Asia/Novosibirsk"/>
            <xs:enumeration value="Asia/Omsk"/>
            <xs:enumeration value="Asia/Qyzylorda"/>
            <xs:enumeration value="Asia/Thimbu"/>
            <xs:enumeration value="Asia/Thimphu"/>
            <xs:enumeration value="BST"/>
            <xs:enumeration value="Indian/Chagos"/>
            <xs:enumeration value="Antarctica/Davis"/>
            <xs:enumeration value="Asia/Bangkok"/>
            <xs:enumeration value="Asia/Ho_Chi_Minh"/>
            <xs:enumeration value="Asia/Hovd"/>
            <xs:enumeration value="Asia/Jakarta"/>
            <xs:enumeration value="Asia/Krasnoyarsk"/>
            <xs:enumeration value="Asia/Phnom_Penh"/>
            <xs:enumeration value="Asia/Pontianak"/>
            <xs:enumeration value="Asia/Saigon"/>
            <xs:enumeration value="Asia/Vientiane"/>
            <xs:enumeration value="Indian/Christmas"/>
            <xs:enumeration value="VST"/>
            <xs:enumeration value="Antarctica/Casey"/>
            <xs:enumeration value="Asia/Brunei"/>
            <xs:enumeration value="Asia/Choibalsan"/>
            <xs:enumeration value="Asia/Chongqing"/>
            <xs:enumeration value="Asia/Chungking"/>
            <xs:enumeration value="Asia/Harbin"/>
            <xs:enumeration value="Asia/Hong_Kong"/>
            <xs:enumeration value="Asia/Irkutsk"/>
            <xs:enumeration value="Asia/Kashgar"/>
            <xs:enumeration value="Asia/Kuala_Lumpur"/>
            <xs:enumeration value="Asia/Kuching"/>
            <xs:enumeration value="Asia/Macao"/>
            <xs:enumeration value="Asia/Macau"/>
            <xs:enumeration value="Asia/Makassar"/>
            <xs:enumeration value="Asia/Manila"/>
            <xs:enumeration value="Asia/Shanghai"/>
            <xs:enumeration value="Asia/Singapore"/>
            <xs:enumeration value="Asia/Taipei"/>
            <xs:enumeration value="Asia/Ujung_Pandang"/>
            <xs:enumeration value="Asia/Ulaanbaatar"/>
            <xs:enumeration value="Asia/Ulan_Bator"/>
            <xs:enumeration value="Asia/Urumqi"/>
            <xs:enumeration value="Australia/Perth"/>
            <xs:enumeration value="Australia/West"/>
            <xs:enumeration value="CTT"/>
            <xs:enumeration value="Hongkong"/>
            <xs:enumeration value="PRC"/>
            <xs:enumeration value="Singapore"/>
            <xs:enumeration value="Asia/Dili"/>
            <xs:enumeration value="Asia/Jayapura"/>
            <xs:enumeration value="Asia/Pyongyang"/>
            <xs:enumeration value="Asia/Seoul"/>
            <xs:enumeration value="Asia/Tokyo"/>
            <xs:enumeration value="Asia/Yakutsk"/>
            <xs:enumeration value="JST"/>
            <xs:enumeration value="Japan"/>
            <xs:enumeration value="Pacific/Palau"/>
            <xs:enumeration value="ROK"/>
            <xs:enumeration value="AET"/>
            <xs:enumeration value="Antarctica/DumontDUrville"/>
            <xs:enumeration value="Asia/Sakhalin"/>
            <xs:enumeration value="Asia/Vladivostok"/>
            <xs:enumeration value="Australia/ACT"/>
            <xs:enumeration value="Australia/Brisbane"/>
            <xs:enumeration value="Australia/Canberra"/>
            <xs:enumeration value="Australia/Currie"/>
            <xs:enumeration value="Australia/Hobart"/>
            <xs:enumeration value="Australia/Lindeman"/>
            <xs:enumeration value="Australia/Melbourne"/>
            <xs:enumeration value="Australia/NSW"/>
            <xs:enumeration value="Australia/Queensland"/>
            <xs:enumeration value="Australia/Sydney"/>
            <xs:enumeration value="Australia/Tasmania"/>
            <xs:enumeration value="Australia/Victoria"/>
            <xs:enumeration value="Pacific/Guam"/>
            <xs:enumeration value="Pacific/Port_Moresby"/>
            <xs:enumeration value="Pacific/Saipan"/>
            <xs:enumeration value="Pacific/Truk"/>
            <xs:enumeration value="Pacific/Yap"/>
            <xs:enumeration value="Asia/Magadan"/>
            <xs:enumeration value="Pacific/Efate"/>
            <xs:enumeration value="Pacific/Guadalcanal"/>
            <xs:enumeration value="Pacific/Kosrae"/>
            <xs:enumeration value="Pacific/Noumea"/>
            <xs:enumeration value="Pacific/Ponape"/>
            <xs:enumeration value="SST"/>
            <xs:enumeration value="Antarctica/McMurdo"/>
            <xs:enumeration value="Antarctica/South_Pole"/>
            <xs:enumeration value="Asia/Anadyr"/>
            <xs:enumeration value="Asia/Kamchatka"/>
            <xs:enumeration value="Kwajalein"/>
            <xs:enumeration value="NST"/>
            <xs:enumeration value="NZ"/>
            <xs:enumeration value="Pacific/Auckland"/>
            <xs:enumeration value="Pacific/Fiji"/>
            <xs:enumeration value="Pacific/Funafuti"/>
            <xs:enumeration value="Pacific/Kwajalein"/>
            <xs:enumeration value="Pacific/Majuro"/>
            <xs:enumeration value="Pacific/Nauru"/>
            <xs:enumeration value="Pacific/Tarawa"/>
            <xs:enumeration value="Pacific/Wake"/>
            <xs:enumeration value="Pacific/Wallis"/>
            <xs:enumeration value="Pacific/Enderbury"/>
            <xs:enumeration value="Pacific/Tongatapu"/>
            <xs:enumeration value="Pacific/Kiritimati"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- Retrieve all predictive dialers response message type -->
    <xs:complexType name="predictiveDialers">
        <xs:sequence>
            <xs:element name="predictiveDialerRef" type="predictiveDialerRef" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="predictiveDialerRef">
        <xs:complexContent>
            <xs:extension base="objRef">
                <xs:sequence>
                    <xs:element name="type" type="predictiveDialerType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="predictiveDialerBase">
        <xs:sequence>
            <xs:element name="description" type="lpString" minOccurs="0"/>
            <xs:element name="type" type="predictiveDialerType"/>
            <xs:element name="invitationAcceptRatio" >
                <xs:simpleType>
                    <xs:restriction base="xs:double">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="100"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="buttonAcceptRatio" >
                <xs:simpleType>
                    <xs:restriction base="xs:double">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="100"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="invitationTimeoutSeconds" >
                <xs:simpleType>
                    <xs:restriction base="xs:long">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="9999"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="buttonTimeoutSeconds" >
                <xs:simpleType>
                    <xs:restriction base="xs:long">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="9999"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="visitorMaxWaitTime" type="xs:long" />

            <xs:element name="agentFactor" >
                <xs:simpleType>
                    <xs:restriction base="xs:double">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="1000"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="priority" >
                <xs:simpleType>
                    <xs:restriction base="xs:double">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="100"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>

            <xs:element name="dialerMode" type="predictiveDialerDialerMode"/>
            <xs:element name="routingMode" type="predictiveDialerRouting" />
        </xs:sequence>
    </xs:complexType>

    <!--update permissiong group object-->
    <xs:complexType name="updatePredictiveDialer">
        <xs:complexContent>
            <xs:extension base="predictiveDialerBase">
                <xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--update permissiong group object-->
    <xs:complexType name="predictiveDialer">
        <xs:complexContent>
            <xs:extension base="predictiveDialerBase">
                <xs:sequence>
                    <xs:element name="name" type="lpString"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <xs:simpleType name="predictiveDialerType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="UNSET"/>
            <xs:enumeration value="CHAT"/>
            <xs:enumeration value="VOICE"/>
            <xs:enumeration value="RSI"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="predictiveDialerRouting">
        <xs:sequence>
            <xs:choice maxOccurs="1" minOccurs="1">
                <xs:element name="room" type="PDRoutingRoom"  />
                <xs:element name="skill" type="PDRoutingSkill" />
                <xs:element name="none" type="PDRoutingNone" />
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PDRoutingSkill">
        <xs:sequence>
            <xs:element name="skillId" type="idRef" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PDRoutingRoom">
        <xs:sequence />
    </xs:complexType>

    <xs:complexType name="PDRoutingNone">
        <xs:sequence />
    </xs:complexType>


    <xs:simpleType name="predictiveDialerDialerMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="BUTTON"/>
            <xs:enumeration value="INVITATION"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- Retrieve all report counters response message type -->
    <xs:complexType name="reportCounters">
        <xs:sequence>
            <xs:element name="reportCounterRef" type="reportCounterRef" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="reportCounterRef">
        <xs:sequence>
            <!--<xs:element name="id" type="xs:string"/>-->
            <xs:element name="name" type="lpString"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="marketerProperties">
        <xs:sequence>
            <xs:element name="siteId" type="xs:string"/>
            <xs:element name="propertiesType" type="xs:string"/>
            <xs:element name="propertiesInXML" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="extensionPhoneNumber">
        <xs:restriction base="xs:string">
            <xs:maxLength value="6"/>
        </xs:restriction>
    </xs:simpleType>

    <!--operatorGroups-->
    <xs:complexType name="operatorGroups">
        <xs:sequence>
            <xs:element name="operatorGroupRef" type="objRef" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="operatorGroup">
       <xs:sequence>
           <xs:element name="name" type="lpString" />
           <xs:element name="description" type="lpString" minOccurs="0"/>
           <xs:element name="groupMembers" type="groupMembersList" />
           <xs:element name="acdAttributesSetId" type="idRef" default="-1" minOccurs="0"/>
           <xs:element name="adminProfile" type="idRef" default="-1" minOccurs="0"/>
       </xs:sequence>
    </xs:complexType>

    <xs:complexType name="updateOperatorGroup">
        <xs:sequence>
            <xs:element name="description" type="lpString" minOccurs="0"/>
            <xs:element name="groupMembers" type="groupMembersList" minOccurs="0"/>
            <xs:element name="acdAttributesSetId" type="idRef" default="-1" minOccurs="0"/>
            <xs:element name="adminProfile" type="idRef" default="-1" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="groupMembersList">
        <xs:sequence>
            <xs:element name="groupMember" type="idRef" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="acdAttributesSets">
        <xs:sequence>
            <xs:element name="acdAttributesSetRef" type="objRef" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!--Chat Library Resources -->
    <xs:complexType name="chatLibraryResources">
        <xs:sequence>
            <xs:element name="resourceRef" type="objRef" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="chatLibraryResource">
        <xs:sequence>
            <xs:element name="name" type="lpString"/>
            <xs:element name="description" type="lpString" minOccurs="0"/>
            <xs:element name="data" type="xs:string"/>
            <xs:element name="resourceType" type="resourceType"/>
            <xs:element name="updateDate" type="xs:long" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        This field used only for retrieve operation. During create/update operation, value ignored and replaced by actual creation/update date.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="updatedBy" type="xs:long" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        This field used only for retrieve operation. During create/update operation, value ignored and replaced by actual user id.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <!--Related to ParametrizedResource only. Doesn't related to chatLibraryResource-->
            <!--<xs:element name="readFromProp" type="xs:boolean" minOccurs="0"/>-->
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="updateChatLibraryResource">
        <xs:sequence>
            <xs:element name="description" type="lpString" minOccurs="0"/>
            <xs:element name="data" type="xs:string" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="resourceType">
        <xs:restriction base="xs:int">
            <xs:enumeration value="9">
                <xs:annotation>
                    <xs:documentation>
                        Chat Window Selector
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="10">
                <xs:annotation>
                    <xs:documentation>
                        Chat Windows
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="11">
                <xs:annotation>
                    <xs:documentation>
                        Chat Surveys
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="12">
                <xs:annotation>
                    <xs:documentation>
                        Chat Images
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="13">
                <xs:annotation>
                    <xs:documentation>
                        Includes
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="14">
                <xs:annotation>
                    <xs:documentation>
                        Agent Control
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <!-- Chat Library Resources -->
    <!--systemMessages-->
    <xs:complexType name="systemMessages">
        <xs:sequence>
            <xs:element name="systemMessagesRef" type="objRef"  minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="systemMessage">
        <xs:annotation>
            <xs:documentation>
                All components in this type are optional in schema. But there is some restriction regards to provisioned features , that checked in the code.
                Please refer to each element documentation for restrictions.
                When Named System Messages feature is not provisioned, the create operation allowed only once at first time.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="lang" type="xs:string" minOccurs="0">
            <xs:annotation>
                <xs:documentation>
                    Restrictions:
                    Named System Messages feature: create element - mandatory; update element - forbidden
                    Customize Chat Texts feature: create element - mandatory; update element - optional
                </xs:documentation>
            </xs:annotation>
            </xs:element>
            <xs:element name="name" type="lpString" minOccurs="0">
            <xs:annotation>
                <xs:documentation>
                    Restrictions:
                    Named System Messages feature: create element - mandatory; update element - optional
                    Customize Chat Texts feature: create element - forbidden; update element - forbidden
                </xs:documentation>
            </xs:annotation>
            </xs:element>
            <xs:element name="adminProfile" type="idRef" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        When Named System Messages feature is not provisioned, the element is not allowed
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="defaultSet" type="default" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Set whether the object is the default System Messages Set.
                        Element can only be "true". Cannot be unset.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="staller" type="staller" minOccurs="0"/>
            <xs:element name="messagesTable" type="messagesTable" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        The messages table can be partial. The default messages will be added for all missed rows.
                        It can be used when needs to restore default message.
                        Omit if you wish to use default message.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="messagesTable">
        <xs:sequence>
            <xs:element name="messageRow" type="messageRow" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="messageRow">
        <xs:sequence>
            <xs:element name="type" type="xs:string"/>
            <xs:element name="event" type="lpString" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Event is string representation of type.This element
                        exists only for presentation layer, is not mandatory and not
                        handled at all.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="value" type="lpString">
                <xs:annotation>
                    <xs:documentation>
                        Actual message. Can contain unicode character of UTF-8.
                        Also in case where string contains XML escape character, the
                        characters should be presented in encoded form:
                        <!--{"\"", "&quot;"}- double-quote-->
                        <!--{"&", "&amp;"}  - ampersand-->
                        <!--{"<", "&lt;"}   - less-than-->
                        <!--{">", "&gt;"}   - greater-than-->
                        <!--{"'", "&apos;"} - XML apostrophe-->
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="staller">
        <xs:sequence>
            <xs:element name="stallerEnabled" type="xs:boolean"/>
            <xs:element name="stallerTimeout" type="xs:int"/>
            <xs:element name="nonResponsiveEnabled" type="xs:boolean"/>
            <xs:element name="nonResponsiveTimeout" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <!--chatWindows-->
    <xs:complexType name="chatWindows">
        <xs:sequence>
            <xs:element name="chatWindowsRef" type="objRef"  minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!--cannedResponses-->
    <xs:complexType name="cannedResponses">
        <xs:sequence>
            <xs:element name="cannedResponsesRef" type="objRef"  minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="cannedResponse">
        <xs:sequence>
            <xs:element name="name" type="lpString" />
            <xs:element name="adminProfile" type="idRef" minOccurs="0"/>
            <xs:element name="type" type="cannedResponseType" minOccurs="0"/>
            <xs:element name="cannedResponseTree" type="cannedResponseTree" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="updateCannedResponse">
        <xs:sequence>
            <xs:element name="name" type="lpString" minOccurs="0"/>
            <xs:element name="adminProfile" type="idRef" minOccurs="0"/>
            <xs:element name="type" type="cannedResponseType" minOccurs="0"/>
            <xs:element name="cannedResponseTree" type="cannedResponseTree" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="cannedResponseType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="html"/>
            <xs:enumeration value="text"/>
            <xs:enumeration value="ticket"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="cannedResponseTree">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="menu" type="menuType"/>
            <xs:element name="message" type="messageType"/>
            <xs:element name="separator" type="separatorType"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="menuType">
        <xs:sequence>
            <xs:element name="name" type="lpString"/>
            <xs:element name="enabled" type="xs:boolean" minOccurs="0"/>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="menu" type="menuType"/>
                <xs:element name="message" type="messageType"/>
                <xs:element name="separator" type="separatorType"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="messageType">
        <xs:sequence>
            <xs:element name="name" type="lpString" />
            <xs:element name="responseText" type="lpString" minOccurs="0" />
            <xs:element name="enabled" type="xs:boolean" default="true"/>
            <xs:element name="pushPageUrl" type="xs:string" minOccurs="0"/>
            <xs:element name="htmlFormatFlag" type="xs:boolean" minOccurs="0"/>
            <xs:element name="hotKey" type="hotKeyType" minOccurs="0" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="hotKeyType">
        <xs:sequence>
            <xs:element name="key" type="xs:string"/>
            <xs:sequence minOccurs="1">
                <xs:element name="ctrl" type="xs:boolean" minOccurs="0"/>
                <xs:element name="alt" type="xs:boolean" minOccurs="0"/>
                <xs:element name="shift" type="xs:boolean" minOccurs="0"/>
            </xs:sequence>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="separatorType">
        <xs:sequence>
            <xs:element name="enabled" type="xs:boolean" default="true"/>
        </xs:sequence>
    </xs:complexType>

    <!--surveys-->
    <xs:complexType name="surveys">
        <xs:sequence>
            <xs:element name="surveyRef" type="surveyRef"  minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="surveyRef">
        <xs:complexContent>
            <xs:extension base="objRef">
                <xs:sequence>
                    <xs:element name="type" type="surveyType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="updateSurvey">
        <xs:complexContent>
            <xs:extension base="surveyBase">
                <xs:sequence>
                    <xs:element name="name" type="lpString" minOccurs="0"/>
                    <xs:choice minOccurs="0">
                        <xs:element name="questions" type="surveyQuestions" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>NOTE: When questions object is presented, the SurveyLogic is cleared and should be set again separately.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="logic" type="xs:string" />
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="survey">
        <xs:complexContent>
            <xs:extension base="surveyBase">
                <xs:sequence>
                    <xs:element name="name" type="lpString" />
                    <xs:element name="surveyType" type="surveyType">
                        <xs:annotation>
                            <xs:documentation>type only applies for creation of a survey, not for updating it.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="questions" type="surveyQuestions" />
                    <xs:element name="logic" type="xs:string" minOccurs="0" >
                        <xs:annotation>
                            <xs:documentation>logic is not used in Create and only returned in Retrieve</xs:documentation>
                        </xs:annotation>
                    </xs:element>

                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="surveyBase">
        <xs:sequence>
            <xs:element name="dbid" type="xs:long" minOccurs="0" >
                <xs:annotation>
                    <xs:documentation>Read Only - dbid is set when the survey is saved to DB (upon commit) and is used by other objects to reference a survey (e.g. Visitor Profile). </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="adminProfile" type="idRef" minOccurs="0" />
            <xs:element name="title" type="lpString" minOccurs="0" />
            <xs:element name="heading" type="lpString" minOccurs="0" />
            <xs:element name="params" type="lpString" minOccurs="0" />
            <xs:element name="extraParams" type="surveyExtraParams" minOccurs="0" >
                <xs:annotation>
                    <xs:documentation>Logic can only be set in update in a separate tag and not in extraParams</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="default" type="default" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Default can only be set to true, and cannot be unset. Only way is to set another survey as the Default.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>



    <xs:complexType name="skillRefList">
        <xs:sequence>
            <xs:element name="skill" type="idRef" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="surveyExtraParams">
        <xs:sequence>
            <xs:element name="param" type="surveyExtraParam" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="surveyExtraParam">
        <xs:sequence>
            <xs:element name="name" type="xs:string" />
            <xs:element name="value" type="lpString" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="surveyQuestions">
        <xs:sequence>
            <xs:element name="surveyQuestion" type="surveyQuestion" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="surveyQuestion">
        <xs:sequence>
            <xs:element name="question" type="lpString" />
            <xs:element name="type" type="lpString" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        'type' is a read-only field, specifying Default questions with their type.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <!--<xs:element name="sequence" type="xs:int" />-->
            <xs:element name="logicID" type="xs:int" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        The logicID is readOnly (for retrieve) and can only be set by the system.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="displayed" type="xs:boolean" />
            <xs:element name="required" type="xs:boolean" />
            <xs:element name="UDEScope" type="UDEScope" />
            <xs:element name="UDEType" type="UDEType" />
            <xs:element name="globalName" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Unique identifier for the question in the survey.
                        The globalName is readOnly and can only be set by the system.
                        If the globalName is present at "update" then a question with the same globalName will be updated.
                        If no such question an error will be thrown.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="answersList" type="answersList" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Answers list is a required element in case of drop-down, combo, radio button.
                        Array id for Logic is zero based.
                        In case of Skill question, the answer list is calculated from the extra-param skills
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="encrypted" type="xs:boolean" minOccurs="0"/>
            <xs:element name="isAutoSubmitQuestion" type="xs:boolean" minOccurs="0"/>
            <xs:element name="autoSubmitAnswer" type="lpString" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        autoSubmitAnswer is mandatory in case isAutoSubmitQuestion is true.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="UDEType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Text Field"/>
            <xs:enumeration value="Radio Button"/>
            <xs:enumeration value="Checkbox"/>
            <xs:enumeration value="Dropdown Box"/>
            <xs:enumeration value="Text Area"/>
            <xs:enumeration value="Radio Button (side by side)"/>
            <xs:enumeration value="Date"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="UDEScope">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Visitor"/>
            <xs:enumeration value="Session"/>
            <xs:enumeration value="Page"/>
            <xs:enumeration value="Message"/>
            <xs:enumeration value="Ticket"/>
            <xs:enumeration value="Contact"/>
            <xs:enumeration value="Document"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="surveyType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Pre-Chat"/>
            <xs:enumeration value="Exit"/>
            <xs:enumeration value="Chat Operator"/>
            <xs:enumeration value="Offline"/>
            <xs:enumeration value="Pre-Call"/>
            <xs:enumeration value="Call-Exit"/>
            <xs:enumeration value="Call-Offline"/>
            <xs:enumeration value="Pre-Call-Escalate"/>
        </xs:restriction>
    </xs:simpleType>


    <xs:complexType name="answersList">
        <xs:sequence>
            <xs:element name="answer" type="lpString" maxOccurs="unbounded" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        The answer index is based on the XML order, it is zero based, and is set by the system.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>


    <!--visitorProfiles-->
    <xs:complexType name="visitorProfiles">
        <xs:sequence>
            <xs:element name="visitorProfileRef" type="objRef" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!--update permissiong group object-->
        <xs:complexType name="updateVisitorProfile">
            <xs:complexContent>
                <xs:extension base="visitorProfileBase">
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
        <!--update permissiong group object-->
        <xs:complexType name="visitorProfile">
            <xs:complexContent>
                <xs:extension base="visitorProfileBase">
                    <xs:sequence>
                            <xs:element name="name" type="lpString"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>


    <xs:complexType name="visitorProfileBase">
        <xs:sequence>
                <xs:element name="adminProfileId" type="idRef" minOccurs="0"/>
                <xs:element name="description" type="lpString" minOccurs="0"/>
                <xs:element name="chatWindowProfileId" type="idRef" minOccurs="0"/>
                <xs:element name="systemMessageSetId" type="idRef" minOccurs="0"/>
                <xs:element name="enablePreChatSurvey" type="xs:boolean" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>
                            The default value is false
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="activePreChatSurveyId" type="idRef" minOccurs="0"/>
                <xs:element name="enableExitSurvey" type="xs:boolean" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>
                            The default value is false
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="activeExitSurveyId" type="idRef" minOccurs="0"/>
                <xs:element name="enableOperatorSurvey" type="xs:boolean" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>
                            The default value is false
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="activeOperatorSurveyId" type="idRef" minOccurs="0"/>
                <xs:element name="activeOfflineSurveyId" type="idRef" minOccurs="0"/>
                <xs:element name="cannedResponsesSetIds" type="cannedResponsesSetIds" minOccurs="0"/>
                <xs:element name="chatTemplates" type="chatTemplates" minOccurs="0" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="cannedResponsesSetIds">
        <xs:sequence>
            <xs:element name="cannedResponsesSetId" type="idRef" maxOccurs="unbounded" minOccurs="0" />
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="chatTemplates">
        <xs:sequence>
            <xs:element name="chatTemplate" type="chatTemplate" maxOccurs="unbounded" minOccurs="0" />
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="chatTemplate">
        <xs:sequence>
            <xs:element name="chatTemplateName" type="chatTemplateName"/>
            <xs:element name="chatResourceName" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        The chat resource name is validated against the file system
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="chatTemplateName">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ChatWindow"/>
            <xs:enumeration value="PreChatWindow"/>
            <xs:enumeration value="OfflineWindow"/>
            <xs:enumeration value="ExitWindow"/>
            <xs:enumeration value="PreChatContent"/>
            <xs:enumeration value="PreChatDone"/>
            <xs:enumeration value="OfflineContent"/>
            <xs:enumeration value="OfflineDone"/>
            <xs:enumeration value="ExitDone"/>
            <xs:enumeration value="Includes"/>
            <xs:enumeration value="AgentControl"/>
            <xs:enumeration value="AgentControlRedirect"/>
        </xs:restriction>
    </xs:simpleType>

    <!--revisions-->
    <xs:complexType name="objectRevisions">
        <xs:sequence>
            <xs:element name="object" type="revision" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="revision">
        <xs:sequence>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="revision" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <!--window properties-->
    <xs:complexType name="windowsProperties">
        <xs:sequence>
            <xs:element name="windowsPropertiesRef" type="objRef"  minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="windowPropertiesBase">
        <xs:sequence>
            <xs:element name="skin" type="skin" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Please Note:
                        To create a windows properties object, one must have the 'Named Chat Windows' feature provisioned
                        To set skin to 'LP Connect' or to set the 'enableEmailTranscript' field to chat window, one must have
                        the 'Displays Lp connect tab in LPAC and admin option to use in house widgets' feature provisioned
                        A default chat window cannot be deleted
                        Please note that Pluggble skins can still be altered via the API
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="defaultChat" type="default" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Set whether the window is the default window
                        Element can only be "true"
                        Cannot be unset
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="adminProfile" type="idRef" minOccurs="0" />
            <xs:element name="emailText" type="xs:string" minOccurs="0"/>
            <xs:element name="chatImage" type="xs:string" minOccurs="0"/>
            <xs:element name="leaveImage" type="xs:string" minOccurs="0"/>
            <xs:element name="chatColor" type="xs:string" minOccurs="0"/>
            <xs:element name="leaveColor" type="xs:string" minOccurs="0"/>
            <xs:element name="categoryLanguage" type="xs:string" minOccurs="0"/>
            <xs:element name="category" type="xs:string" minOccurs="0"/>
            <xs:element name="subCategory" type="xs:string" minOccurs="0"/>
            <xs:element name="lang" type="xs:string" minOccurs="0"/>
            <xs:element name="noticeColor" type="xs:string" minOccurs="0"/>
            <xs:element name="chatWindowStyleSheetURL" type="xs:string" minOccurs="0"/>
            <xs:element name="showToOperator" type="xs:boolean" minOccurs="0"/>
            <xs:element name="showToVisitor" type="xs:boolean" minOccurs="0"/>
            <xs:element name="ChatWindow" type="window" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Settings that apply only to the chat window
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="PreChatWindow" type="window" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Settings that apply only to the pre chat window
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="OfflineWindow" type="window" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Settings that apply only to the offline chat window
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="ExitWindow" type="window" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Settings that apply only to the exit chat window
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="All" type="window" minOccurs="0" >
                <xs:annotation>
                    <xs:documentation>
                        Settings that apply to all 4 chat windows
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="windowProperties">
        <xs:complexContent>
            <xs:extension base="windowPropertiesBase">
                <xs:sequence>
                    <xs:element name="name" type="lpString" >
                        <xs:annotation>
                            <xs:documentation>
                                Please Note:
                                To create a windows properties object, one must have the 'Named Chat Windows' feature provisioned
                                To set skin to 'LP Connect' or to set the 'enableEmailTranscript' field to chat window, one must have
                                the 'Displays Lp connect tab in LPAC and admin option to use in house widgets' feature provisioned
                                A default chat window cannot be deleted
                                Please note that Pluggble skins can still be altered via the API
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="updateWindowProperties">
        <xs:complexContent>
            <xs:extension base="windowPropertiesBase">
                <xs:sequence>
                    <xs:element name="name" type="lpString" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="window">
        <xs:sequence>
            <xs:element name="field" type="field" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="field">
        <xs:sequence>
            <xs:element name="key" type="xs:string" />
            <xs:element name="val" type="xs:string" />
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="skin">
        <xs:restriction base="xs:string">
            <xs:enumeration value="LP Connect"/>
            <xs:enumeration value="Classic Look"/>
            <xs:enumeration value="Legacy Look"/>
            <xs:enumeration value="Modern Look"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="default">
        <xs:restriction base="xs:string">
            <xs:enumeration value="true"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- invitations -->
    <xs:complexType name="invitations">
        <xs:sequence>
            <xs:element name="invitationRef" type="invitationRef" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="invitationRef">
        <xs:sequence>
            <xs:element name="id" type="xs:string"/>
            <xs:element name="name" type="lpString"/>
            <xs:element name="type" type="invitationType"/>
        </xs:sequence>
        <xs:attribute ref="xlink:href"/>
    </xs:complexType>
    <xs:simpleType name="invitationType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="CHAT"/>
            <xs:enumeration value="VOICE"/>
            <xs:enumeration value="MULTI_CHANNEL"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="invitationBase">
        <xs:sequence>
            <xs:element name="default" type="default" minOccurs="0"/>
            <xs:element name="contentType" type="contentTypeEnum" minOccurs="0"/>
            <xs:element name="posType" type="posTypeEnum" minOccurs="0"/>
            <xs:element name="onTopOfObj" type="OnTopOfObjEnum" minOccurs="0"/>
            <xs:element name="imagePath" type="xs:string" minOccurs="0"/>
            <xs:element name="customHTML" type="xs:string" minOccurs="0"/>
            <xs:element name="description" type="lpString" minOccurs="0"/>
            <xs:element name="ieOnTopColour" type="xs:string" minOccurs="0"/>
            <xs:element name="ieOnTop" type="xs:int" minOccurs="0"/>
            <xs:element name="hideFlash" type="xs:int" minOccurs="0"/>
            <xs:element name="posX" type="xs:int" minOccurs="0"/>
            <xs:element name="posY" type="xs:int" minOccurs="0"/>
            <xs:element name="posWidth" type="xs:int" minOccurs="0"/>
            <xs:element name="posHeight" type="xs:int" minOccurs="0"/>
            <xs:element name="visualStyle" type="visualStyleEnum" minOccurs="0"/>
            <xs:element name="linkTitle" type="lpString" minOccurs="0"/>
            <xs:element name="closeTitle" type="lpString" minOccurs="0"/>
            <xs:element name="buttonTitle" type="lpString" minOccurs="0"/>
            <xs:element name="preventOffPage" type="xs:boolean" minOccurs="0"/>
            <xs:element name="soundFileUrl" type="xs:string" minOccurs="0"/>
            <xs:element name="inviteSound" type="xs:boolean" minOccurs="0"/>
            <xs:element name="inviteDynTextEnabled" type="xs:boolean" minOccurs="0"/>
            <xs:element name="inviteHtmlDynTextEnabled" type="xs:boolean" minOccurs="0"/>
            <xs:element name="invDynTextClickable" type="xs:boolean" minOccurs="0"/>
            <xs:element name="dynTextPosX" type="xs:int" minOccurs="0"/>
            <xs:element name="dynTextPosY" type="xs:int" minOccurs="0"/>
            <xs:element name="dynTextWidth" type="xs:int" minOccurs="0"/>
            <xs:element name="dynTextHeight" type="xs:int" minOccurs="0"/>
            <xs:element name="dynText" type="lpString" minOccurs="0"/>
            <xs:element name="dynTextOn" type="xs:int" minOccurs="0"/>
            <xs:element name="invDynTextShowIfAll" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="invitation">
        <xs:annotation>
            <xs:documentation>
                Only chat channel is supported
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="invitationBase">
                <xs:sequence>
                    <xs:element name="name" type="lpString"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="updateInvitation">
        <xs:complexContent>
            <xs:extension base="invitationBase">
                <xs:sequence>
                    <xs:element name="name" type="lpString" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="contentTypeEnum">
        <xs:annotation>
            <xs:documentation>
                CONTENT_IMAGE [0]: Content of the invitation is images
                CONTENT_HTML  [2]: Content of the invitation is custom HTML
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:int">
            <xs:enumeration value="0"/>
            <xs:enumeration value="2"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="posTypeEnum">
        <xs:annotation>
            <xs:documentation>
                NONE        [-1]: None Specified
                ABSOLUTE    [1]: Position absolutely
                RELATIVE    [2]: Position relative
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:int">
            <xs:enumeration value="-1"/>
            <xs:enumeration value="1"/>
            <xs:enumeration value="2"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="OnTopOfObjEnum">
        <xs:annotation>
            <xs:documentation>
                NONE    [1]: No logic to position above other objects
                HIDE    [2]: Above by hiding objects on page
                IEONTOP [3]: Use IE on top mechanism
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:int">
            <xs:enumeration value="1"/>
            <xs:enumeration value="2"/>
            <xs:enumeration value="3"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="visualStyleEnum">
        <xs:annotation>
            <xs:documentation>
                FLOATING [1]: Floating
                STATIC   [2]: Static
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:int">
            <xs:enumeration value="1"/>
            <xs:enumeration value="2"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="lpString">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:complexType name="idRef">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute ref="xlink:href" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!-- rule non mandatory common members -->
    <xs:complexType name="ruleBase">
        <xs:sequence>
            <xs:element name="description" type="lpString" default="" minOccurs="0">
                <xs:annotation>
                    <xs:documentation> max length: 500 </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:choice>
                <xs:element name="initiative" type="idRef" default="-1" minOccurs="0"/>
                <xs:element name="followupCampaign" type="idRef" default="-1" minOccurs="0"/>
                <xs:element name="campaign" type="idRef" default="-1" minOccurs="0"/>
            </xs:choice>
            <xs:element name="isMatchAny" type="xs:boolean" default="true" minOccurs="0"/>
            <xs:element name="isStopProcessing" type="xs:boolean" default="false" minOccurs="0"/>
            <xs:element name="conditions" type="conditions" minOccurs="0"/>
            <xs:element name="complexConditions" type="complexConditions" minOccurs="0"/>
            <xs:element name="actions" type="actions" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <!-- rule message type -->
    <xs:complexType name="rule">
        <xs:complexContent>
            <xs:extension base="ruleBase">
                <xs:sequence>
                    <xs:element name="id" type="xs:int" default="-1" minOccurs="0"/>
                    <xs:element name="name" type="lpString">
                        <xs:annotation>
                            <xs:documentation> max length: 500 </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ruleSet" type="idRef" minOccurs="0"/>
                    <xs:element name="ruleType" type="idRef"/>
                    <xs:element name="segment" type="idRef" default="-999" minOccurs="0"/>
                    <xs:element name="enabled" type="xs:boolean"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--Conditions -->
    <xs:complexType name="condition">
        <xs:sequence>
            <xs:element name="type" type="xs:int"/>
            <xs:element name="name" type="lpString" minOccurs="0"/>
            <xs:element name="supportsNegation" type="xs:boolean" minOccurs="0"/>
            <xs:element name="negativeForm" type="xs:boolean" default="false" minOccurs="0"/>
            <xs:element name="parameters" type="parameters" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="conditions">
        <xs:sequence>
            <xs:element name="condition" type="condition" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!-- Complex Conditions-->
    <xs:complexType name="complexCondition" abstract="true"/>
    <xs:complexType name="conditionReference">
        <xs:complexContent>
            <xs:extension base="complexCondition">
                <xs:attribute name="sequence" type="xs:int" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="orCondition">
        <xs:complexContent>
            <xs:extension base="complexCondition">
                <xs:sequence>
                    <xs:element name="complexCondition" type="complexCondition" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="andCondition">
        <xs:complexContent>
            <xs:extension base="complexCondition">
                <xs:sequence>
                    <xs:element name="complexCondition" type="complexCondition" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="complexConditions">
        <xs:sequence>
            <xs:element name="complexCondition" type="complexCondition" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>
    <!--Actions -->
    <xs:complexType name="action">
        <xs:sequence>
            <xs:element name="type" type="xs:int"/>
            <xs:element name="name" type="lpString" minOccurs="0"/>
            <xs:element name="parameters" type="parameters" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="actions">
        <xs:sequence>
            <xs:element name="action" type="action" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!--Parameters -->
    <xs:complexType name="parameters">
        <xs:sequence>
            <xs:element name="parameter" type="parameter" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="parameter">
        <xs:sequence>
            <xs:element name="paramName" type="xs:string"/>
            <xs:element name="paramDisplayValue" type="lpString" nillable="true"/>
            <xs:element name="paramInternalValue" type="lpString" nillable="true" default="" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="takeValueFromPluginParamId" type="xs:string"/>
        <!--This attribute is for use in the context of LP application plugin (part of the Open Platform project)-->
    </xs:complexType>
</xs:schema>